{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/hexo-generate.sh","path":"hexo-generate.sh","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/mypic.jpg","path":"images/mypic.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechat-qcode.jpg","path":"images/wechat-qcode.jpg","modified":0,"renderable":1},{"_id":"source/download/image/Java核心技术卷1第9版.jpg","path":"download/image/Java核心技术卷1第9版.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/wechatpay.jpg","path":"images/wechatpay.jpg","modified":0,"renderable":1},{"_id":"source/download/image/Redis实战.jpg","path":"download/image/Redis实战.jpg","modified":0,"renderable":0},{"_id":"source/download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg","path":"download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"source/download/image/EffectiveJava中文版（第2版）.jpg","path":"download/image/EffectiveJava中文版（第2版）.jpg","modified":0,"renderable":0},{"_id":"source/download/image/2018年美团点评技术年货（合）.jpg","path":"download/image/2018年美团点评技术年货（合）.jpg","modified":0,"renderable":0},{"_id":"source/download/image/JAVA并发编程实战.jpg","path":"download/image/JAVA并发编程实战.jpg","modified":0,"renderable":0},{"_id":"source/download/image/阿里巴巴Java开发手册.jpg","path":"download/image/阿里巴巴Java开发手册.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/myhead2.jpg","path":"images/myhead2.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"source/download/image/Head+First设计模式（中文版）.jpg","path":"download/image/Head+First设计模式（中文版）.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"source/download/image/重构_改善既有代码的设计[高清版].jpg","path":"download/image/重构_改善既有代码的设计[高清版].jpg","modified":0,"renderable":0},{"_id":"source/download/book/阿里巴巴Java开发手册.pdf","path":"download/book/阿里巴巴Java开发手册.pdf","modified":0,"renderable":0},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/myhead.jpg","path":"images/myhead.jpg","modified":0,"renderable":1},{"_id":"source/download/book/JAVA并发编程实战.pdf","path":"download/book/JAVA并发编程实战.pdf","modified":0,"renderable":0},{"_id":"source/download/book/重构_改善既有代码的设计[高清版].pdf","path":"download/book/重构_改善既有代码的设计[高清版].pdf","modified":0,"renderable":0},{"_id":"source/download/book/Head+First设计模式（中文版）.pdf","path":"download/book/Head+First设计模式（中文版）.pdf","modified":0,"renderable":0},{"_id":"source/download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf","path":"download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf","modified":0,"renderable":0},{"_id":"source/download/book/EffectiveJava中文版（第2版）.pdf","path":"download/book/EffectiveJava中文版（第2版）.pdf","modified":0,"renderable":0},{"_id":"source/download/book/Redis实战.pdf","path":"download/book/Redis实战.pdf","modified":0,"renderable":0},{"_id":"source/download/book/2018年美团点评技术年货（合）.pdf","path":"download/book/2018年美团点评技术年货（合）.pdf","modified":0,"renderable":0},{"_id":"source/download/book/Java核心技术卷1第9版.pdf","path":"download/book/Java核心技术卷1第9版.pdf","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"6ffc9ce09728a006590ae28ff58e6bec819ff7fb","modified":1551370649131},{"_id":"source/hexo-generate.sh","hash":"ee0480aeef63366836b34805aef89d86d5058951","modified":1551492981316},{"_id":"themes/next/.DS_Store","hash":"ab2ef9a5080ca1d92592c5e0d6b5b86748307c1c","modified":1551197505758},{"_id":"source/googlec83ece8c0cfa58e5.html","hash":"116edd3a744b88e7421ca67ea86b0fc325124212","modified":1551448887682},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1514806389000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1514806389000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1514806389000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1514806389000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1514806389000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1514806389000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1514806389000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1514806389000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1514806389000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1514806389000},{"_id":"themes/next/README.cn.md","hash":"58ffe752bc4b7f0069fcd6304bbc2d5ff7b80f89","modified":1514806389000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1514806389000},{"_id":"themes/next/README.md","hash":"898213e66d34a46c3cf8446bf693bd50db0d3269","modified":1514806389000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1514806389000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1514806389000},{"_id":"themes/next/_config.yml","hash":"28f8185dd33082c30c2310da4aaf16c35a2c4923","modified":1551492261630},{"_id":"source/_discarded/test.md","hash":"2f8672a2fcd9b2c61e748625407628e3015a6650","modified":1551370739288},{"_id":"source/_posts/.DS_Store","hash":"7859979e9d11f476b9054ba004e89eabb9e3c7d2","modified":1551370631088},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法.md","hash":"602fac537ff93344c13406fc56effdac5965547b","modified":1551367760663},{"_id":"source/_posts/Floodlight控制器创建一个模块的简单过程.md","hash":"1fa47b1113869485a2125f9b69b4a63c4f70880a","modified":1551270003484},{"_id":"source/_posts/Floodlight控制器的安装以及SDN环境的配置.md","hash":"c415e55ab264fbe638e0cb5125da1f3fd842b80c","modified":1551250680012},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网.md","hash":"5c46df6d35774e3e64ce49feecdfb0a2186f1fee","modified":1551397877860},{"_id":"source/_posts/django-外键model的互相读取.md","hash":"6b794d9419878cb5c207ddd4b3c126eb923be7be","modified":1551368001543},{"_id":"source/_posts/linux和windows的线程机制的区别.md","hash":"0f47b1860806676421a42e2e5a92d10db03c6051","modified":1551367865761},{"_id":"source/_posts/如何编写Floodlight-REST-应用.md","hash":"c383d6cc5a4e7e13af94c07811dcdd5800868aa5","modified":1551250704157},{"_id":"source/_posts/简单配置bind9-的master-和slave.md","hash":"969e453d7f26d2413100520b3aa8f4c76b0b818d","modified":1551367954955},{"_id":"source/about/index.md","hash":"2d0db5bc1f93f169cdd9c081172c9279a4b10b62","modified":1551278755426},{"_id":"source/categories/index.md","hash":"e31c1809f1d30aa06219982c31007581fe18518b","modified":1551245454787},{"_id":"source/download/.DS_Store","hash":"5e2c55f05e2b51ed9136d97cae224d62c97fc7d8","modified":1551198579485},{"_id":"source/download/index.md","hash":"e5cee92d722b5a116b08311757ef4bda3ad6e3c3","modified":1551370546000},{"_id":"source/favorite/index.md","hash":"17c4298a94c35340a35624bb2276e2aa162c726d","modified":1551370700723},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1551413599435},{"_id":"source/tags/index.md","hash":"9a9157abb9c1e6e3579a9f12281f1fae6f9ebb61","modified":1551245442452},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1514806389000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1514806389000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1514806389000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1514806389000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1514806389000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1514806389000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1514806389000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1514806389000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1514806389000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1514806389000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1514806389000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1514806389000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1514806389000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1514806389000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1514806389000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1514806389000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1514806389000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"0f0a4584c065174186654502748c5a19a02db4a4","modified":1551397326658},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1514806389000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1514806389000},{"_id":"themes/next/layout/_layout.swig","hash":"27c6b35949dbd159fc5cdd6361ceb36629771650","modified":1550941829602},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1514806389000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1514806389000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1514806389000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1514806389000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1514806389000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1514806389000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1514806389000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1514806389000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1514806389000},{"_id":"themes/next/source/.DS_Store","hash":"8aaf120c9714d07f6faf4147b3eb8b978facace8","modified":1551197510863},{"_id":"themes/next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1551025566240},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1514806389000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1514806389000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1514806389000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1551370625985},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/10.png","hash":"5c2cc24af2d6e8e82d71ae0221582d456bab5473","modified":1551366997362},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/11.png","hash":"137f343fc21590dbfdbcdde1870d35ba1a1581ac","modified":1551367004360},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/2.png","hash":"e9fe4b021ef0ea61c0a1235249fd00278206404a","modified":1551366927157},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/4.png","hash":"45ad9cb25621904c742415db43bc79feb0f9f783","modified":1551366949803},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/5.png","hash":"08c52c9a9a83141bd6d0aa4ead31576fc0e2e422","modified":1551366958343},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/6.png","hash":"b448b9a73a7b7cba5b230f5180c0931f6ddff942","modified":1551366967005},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/9.png","hash":"244c42171b5f2123f759abcbc469d1f134b65c5c","modified":1551366991617},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/8.png","hash":"b3459303a8c1ea88b687e53e0f9d605ac2bfb349","modified":1551366982871},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/1.png","hash":"6dd322a59db6f8abe80bc186c13c2c4e082c5bfe","modified":1551357727358},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/2.png","hash":"fdde86701b22619da50fe5828e0566b9182ca639","modified":1551357752105},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/3.png","hash":"2d9c5952ede291882f184932ad1b37722355fb73","modified":1551357758519},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/4.png","hash":"fc16b122f574044d9702df3632a729e0b6ce07ad","modified":1551357764877},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/7.png","hash":"70b0c785059af5906b13b1c552621745a0341b16","modified":1551357789240},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/5.png","hash":"8d51374c1e4a5f49b87f2aba3eca8ac2ea28ea69","modified":1551357772267},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/6.png","hash":"edb09583b2ffe2c9da687b797c5506e5e1d79d87","modified":1551357779300},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/8.png","hash":"12f8837e39b54fd235dd3f825bcbf7c0470f6e78","modified":1551357795164},{"_id":"source/_posts/linux和windows的线程机制的区别/1.jpg","hash":"19e9b657ee0f8963dfd92039c8b6a36b70a29fa0","modified":1551278066787},{"_id":"source/_posts/linux和windows的线程机制的区别/2.jpg","hash":"b59cb70213287fe225647f91378e7db13094725f","modified":1551278107973},{"_id":"source/download/image/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1551112868072},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1514806389000},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"87bd54ac6de0edb6662b582b8fea1d284ce27f59","modified":1551272155804},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1514806389000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1514806389000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1514806389000},{"_id":"themes/next/layout/_macro/post.swig","hash":"cb9286d0e0b40ab5cc5f2dee6e3335fd3f00d1e6","modified":1551105600386},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1514806389000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1514806389000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1551182438306},{"_id":"themes/next/layout/_partials/footer.swig","hash":"b5b66aad2b23e23b21fcf19f9933dbc9788f57e7","modified":1551400665662},{"_id":"themes/next/layout/_partials/head.swig","hash":"26705d9a0cb44b9f5db7a1b3efd32e7bbf2d0a08","modified":1550940921067},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1514806389000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1514806389000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1514806389000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1514806389000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"566193618fef46b0d21c82c971f4c5c493562282","modified":1551181785487},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1514806389000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1514806389000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1514806389000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1514806389000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1514806389000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1514806389000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1514806389000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1514806389000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1514806389000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1514806389000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1514806389000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1514806389000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1514806389000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1514806389000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1514806389000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1514806389000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1514806389000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1514806389000},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1551025348406},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1514806389000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1514806389000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1514806389000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1514806389000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1514806389000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1514806389000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1514806389000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1514806389000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1514806389000},{"_id":"themes/next/source/images/favicon.ico","hash":"7a6daa6422b9f7b8a26ab9a5c0f91e1f454a2951","modified":1550940185001},{"_id":"themes/next/source/images/mypic.jpg","hash":"c7918d187ef5854325b7adf7210e3420977e0f43","modified":1551197546331},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1514806389000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1514806389000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1514806389000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1514806389000},{"_id":"themes/next/source/images/wechat-qcode.jpg","hash":"c57219ecb4cab7c703a02bf399dcec607cd6d548","modified":1551025298896},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/1.png","hash":"9fbe12f2dfe99ad7baf0c85e45668c36ffbd3679","modified":1551366861612},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/3.png","hash":"f5c473db1e880666115f5c92ed12059f6080866f","modified":1551366939165},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/7.png","hash":"b15cb3b766af5b8217d4cfe4fc5d53b23f7a0730","modified":1551366975640},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/9.png","hash":"173db1e787ce16c0af3d0b44b39b8f40ce9ad7e6","modified":1551357801777},{"_id":"source/download/image/Java核心技术卷1第9版.jpg","hash":"ffdf39963ca9c801810aa94e36929d23488ea980","modified":1551104678309},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514806389000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1551332731580},{"_id":"themes/next/source/images/wechatpay.jpg","hash":"5a3cf2f356e2be712a174f587627013369849c3b","modified":1551001333284},{"_id":"source/download/image/Redis实战.jpg","hash":"bfc9b7c70c02fefa633490789825925679a24a9f","modified":1551104852283},{"_id":"source/download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg","hash":"1789637539989df7e7f9d3ee2483dc80c28053a9","modified":1551104909334},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1514806389000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1514806389000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1514806389000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1514806389000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1514806389000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1551182505725},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1514806389000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1514806389000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1514806389000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"1b5b63668675fbcac10183dfb5954729c5b12f89","modified":1551366464328},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1514806389000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1514806389000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1514806389000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1514806389000},{"_id":"themes/next/source/images/alipay.jpg","hash":"2f6aeb9b9f331eefb13c69ad769205cef9cbec81","modified":1551001352251},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1514806389000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1514806389000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1514806389000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1514806389000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1514806389000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1514806389000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1514806389000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1514806389000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1514806389000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1514806389000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1514806389000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1514806389000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1514806389000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1514806389000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1514806389000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1514806389000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1514806389000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1514806389000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1514806389000},{"_id":"source/download/image/EffectiveJava中文版（第2版）.jpg","hash":"8ec66ee8cb7febf275324dd9f9363db4b413137d","modified":1551104433371},{"_id":"source/download/image/2018年美团点评技术年货（合）.jpg","hash":"f7ec53c6b3b851ebb401f48719621b330570da0c","modified":1551094715132},{"_id":"source/download/image/JAVA并发编程实战.jpg","hash":"523d570130fdaa7807dee709baa7971ba02abb11","modified":1551104513668},{"_id":"source/download/image/阿里巴巴Java开发手册.jpg","hash":"125bc7b80b15fa3ce4c2429d45b3856548ee9ef0","modified":1551194003934},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1514806389000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1514806389000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1514806389000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1514806389000},{"_id":"themes/next/source/images/myhead2.jpg","hash":"56898655e3ff2d9a84028b9a43bc3c1800bc631c","modified":1550987604561},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1514806389000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1514806389000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1514806389000},{"_id":"source/download/image/Head+First设计模式（中文版）.jpg","hash":"4059ff76caf9dfe54cbad1f73a1955e914d6f877","modified":1551193934157},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"5898f811303cd39953129e3626cdfbbd8223b678","modified":1550942750430},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"3496dc2ca5647bbf6a827f991d61849205a5955a","modified":1551105543976},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"0a753aaebc89572748dba691d86879fb4f5b2662","modified":1551105694523},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"d051ed26c02c2e2f6a76b0e6b3f2c8f087ed8396","modified":1550942107090},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1514806389000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1514806389000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1514806389000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1514806389000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1514806389000},{"_id":"source/download/image/重构_改善既有代码的设计[高清版].jpg","hash":"3a769d9bc1d9a8c344600d298ecae481a425b6b2","modified":1551193964031},{"_id":"source/download/book/阿里巴巴Java开发手册.pdf","hash":"d9a6da7ac5bff8f442131f61cf86fb96ab24d671","modified":1547975754498},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1514806389000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1514806389000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1514806389000},{"_id":"themes/next/source/images/myhead.jpg","hash":"9707dfd0809c36aea22dcdc0a64a436918888bb0","modified":1550988032236},{"_id":"source/download/book/JAVA并发编程实战.pdf","hash":"a91ed7fa47581b0d9ed1ff5f3b3023e14d5b4e03","modified":1542533101206},{"_id":"source/download/book/重构_改善既有代码的设计[高清版].pdf","hash":"5e32c96db94fe4a2880df03e7a4cb548763b4cad","modified":1548762536568},{"_id":"source/download/book/Head+First设计模式（中文版）.pdf","hash":"fb37c1fbc204c0f27178b77df8bd28dcba6f2051","modified":1505479407000},{"_id":"source/download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf","hash":"80796b76366b418d62097926b037c9825713a4ce","modified":1550666790089},{"_id":"source/download/book/EffectiveJava中文版（第2版）.pdf","hash":"9a166f4c373d1a3f3c96675860f8248adc13fdfc","modified":1505479797000},{"_id":"source/download/book/Redis实战.pdf","hash":"1849512d73d730e1d45e58330258df076d43d4fe","modified":1534258788792},{"_id":"source/download/book/2018年美团点评技术年货（合）.pdf","hash":"3eb58f772cc3e350391366d2858d442503d1f71a","modified":1518156296926},{"_id":"source/download/book/Java核心技术卷1第9版.pdf","hash":"70b3c284f45722ac56b3afef0476152ebe90be96","modified":1510478696918},{"_id":"public/atom.xml","hash":"6146afe6da6e0babe18e331aee060c0d7e3af8bb","modified":1551494127869},{"_id":"public/baidusitemap.xml","hash":"efe3529fe8ccf3f43661517fed6e6a2f74390704","modified":1551494127869},{"_id":"public/search.xml","hash":"8ba74d4448d4f7fc86731693972b769158ee0ad3","modified":1551494127889},{"_id":"public/sitemap.xml","hash":"feddb84343554e03b8d92f293174107c285ab6cc","modified":1551494127889},{"_id":"public/googlec83ece8c0cfa58e5.html","hash":"9d390be89b3277b21171e2fa59d5c27190e7c9bd","modified":1551494127900},{"_id":"public/about/index.html","hash":"1a583aaf3d976fdc1fa5e9153f160034e07a3388","modified":1551494127900},{"_id":"public/categories/index.html","hash":"dfb65f5b5ef03d646377a66bb3aec11c354464ff","modified":1551494127900},{"_id":"public/download/index.html","hash":"794e6db37a5b1a3ebf2bb6e3cc9ed52501694270","modified":1551494127900},{"_id":"public/favorite/index.html","hash":"10c5bfc4e0ba10f7bad4d6ce308fddcba53f3350","modified":1551494127900},{"_id":"public/tags/index.html","hash":"847bf71be358b4993e04fcdf159c485261fcce0d","modified":1551494127900},{"_id":"public/原创/系统/linux和windows的线程机制的区别/index.html","hash":"b6dac93deada36c9188b3fe2dcf57554b1ec15f5","modified":1551494127900},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/index.html","hash":"5bef519388f5e56eef0c00f1effe17c045d0ba28","modified":1551494127900},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/index.html","hash":"72c8a2d7ab1b6cf6d831dde15c9a547b4efe6652","modified":1551494127900},{"_id":"public/原创/网络/简单配置bind9-的master-和slave/index.html","hash":"5ca8c8e0122c14f64dcf94e4045bc36b9bdbdc22","modified":1551494127900},{"_id":"public/原创/SDN/如何编写Floodlight-REST-应用/index.html","hash":"daf918dabfd9a520819ea5852c3360addcfce1a0","modified":1551494127900},{"_id":"public/原创/SDN/Floodlight控制器的安装以及SDN环境的配置/index.html","hash":"d2bd2e51005bcbb97a2d117af28af063cda05f20","modified":1551494127900},{"_id":"public/原创/SDN/Floodlight控制器创建一个模块的简单过程/index.html","hash":"d634065a4591644a916c3f6b6e85ab38d39791d0","modified":1551494127900},{"_id":"public/原创/Python/django-外键model的互相读取/index.html","hash":"700f9c1d66c14467371c7ccee47b4ed308cf9522","modified":1551494127900},{"_id":"public/archives/index.html","hash":"6969a6c15fe1b72403fab13a575b99a927e7c562","modified":1551494127901},{"_id":"public/archives/2015/index.html","hash":"646a45a118fb0cc85c6555747995c5907b1b341d","modified":1551494127901},{"_id":"public/archives/2015/12/index.html","hash":"0ac44c01def0d5900d6d9f3bad8df8c92ba343e2","modified":1551494127901},{"_id":"public/archives/2016/index.html","hash":"68c68d2ce4807eb4cfaca08b927b0fac420d96dc","modified":1551494127901},{"_id":"public/archives/2016/01/index.html","hash":"51730c4f93c377b4c552403f38e31e1aec55fa00","modified":1551494127901},{"_id":"public/archives/2016/03/index.html","hash":"66e4c7e80e6dc81b2d1b6033564bccb7e37274f4","modified":1551494127901},{"_id":"public/categories/原创/index.html","hash":"98bf1d6584070096e7489ad53ecd1a35f143deb2","modified":1551494127901},{"_id":"public/categories/原创/SDN/index.html","hash":"c61b6cb7d7115cd300233f7050faab682a6b2935","modified":1551494127901},{"_id":"public/categories/原创/Python/index.html","hash":"3ebde90b8dc762da109235b93676f3921ce70b47","modified":1551494127901},{"_id":"public/categories/原创/系统/index.html","hash":"f54f2eef4272cb5197c7140b3eca57c7f9ad3a55","modified":1551494127901},{"_id":"public/categories/原创/网络/index.html","hash":"d565790356c43a41d11fbb38f83aadc9641ccbc0","modified":1551494127901},{"_id":"public/index.html","hash":"eddc78449910330d1d424ce15c246d11c258b9e0","modified":1551494127901},{"_id":"public/tags/SDN/index.html","hash":"b39408069bf0d9306accbf577da1ce6fc1c2b14b","modified":1551494127901},{"_id":"public/tags/Floodlight/index.html","hash":"f4fb04e35fd416dfe14e036d9c6f4ca32d55a8f1","modified":1551494127901},{"_id":"public/tags/Mininet/index.html","hash":"265278b12c3fca1106a146008db68ae461116036","modified":1551494127901},{"_id":"public/tags/Linux/index.html","hash":"dd6e55f2ed35de09ef67d8dd0e0b3a876756f9f8","modified":1551494127901},{"_id":"public/tags/Python/index.html","hash":"ee0f3d7f51ae9488a50d8fec3ed8c3557b3d64e0","modified":1551494127901},{"_id":"public/tags/Django/index.html","hash":"9fdba5213af035ea35b892f711c829bdebc43fb1","modified":1551494127901},{"_id":"public/tags/linux/index.html","hash":"0d97e8a0531da4fea0d1e9e7bb4a1c54a35ebe35","modified":1551494127901},{"_id":"public/tags/windows/index.html","hash":"24c6f1d4dcbaa9a35035fc2d385087730d5c0618","modified":1551494127901},{"_id":"public/tags/线程机制/index.html","hash":"6b5b0eebf338309318c587d3014f00c45958d463","modified":1551494127902},{"_id":"public/tags/bind9/index.html","hash":"f22f0e18c7864c5f429155b9a92ab6a4b834d510","modified":1551494127902},{"_id":"public/hexo-generate.sh","hash":"ee0480aeef63366836b34805aef89d86d5058951","modified":1551494127913},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1551494127913},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1551494127913},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1551494127913},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1551494127913},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1551494127913},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1551494127913},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1551494127913},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1551494127913},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1551494127913},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1551494127913},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1551494127913},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1551494127913},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551494127913},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1551494127913},{"_id":"public/images/favicon.ico","hash":"7a6daa6422b9f7b8a26ab9a5c0f91e1f454a2951","modified":1551494127913},{"_id":"public/images/mypic.jpg","hash":"c7918d187ef5854325b7adf7210e3420977e0f43","modified":1551494127913},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1551494127913},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1551494127913},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1551494127913},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1551494127913},{"_id":"public/images/wechat-qcode.jpg","hash":"c57219ecb4cab7c703a02bf399dcec607cd6d548","modified":1551494127914},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1551494127914},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1551494127914},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1551494127914},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1551494127914},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1551494127914},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1551494127914},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1551494127914},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1551494127914},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1551494127914},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1551494127914},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1551494127914},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1551494127914},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1551494127914},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1551494127914},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1551494127914},{"_id":"public/原创/系统/linux和windows的线程机制的区别/1.jpg","hash":"19e9b657ee0f8963dfd92039c8b6a36b70a29fa0","modified":1551494127914},{"_id":"public/原创/系统/linux和windows的线程机制的区别/2.jpg","hash":"b59cb70213287fe225647f91378e7db13094725f","modified":1551494127914},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/1.png","hash":"6dd322a59db6f8abe80bc186c13c2c4e082c5bfe","modified":1551494127914},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/2.png","hash":"fdde86701b22619da50fe5828e0566b9182ca639","modified":1551494127915},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/3.png","hash":"2d9c5952ede291882f184932ad1b37722355fb73","modified":1551494127915},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/4.png","hash":"fc16b122f574044d9702df3632a729e0b6ce07ad","modified":1551494127915},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/5.png","hash":"8d51374c1e4a5f49b87f2aba3eca8ac2ea28ea69","modified":1551494127915},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/6.png","hash":"edb09583b2ffe2c9da687b797c5506e5e1d79d87","modified":1551494127915},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/7.png","hash":"70b0c785059af5906b13b1c552621745a0341b16","modified":1551494127915},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/8.png","hash":"12f8837e39b54fd235dd3f825bcbf7c0470f6e78","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/10.png","hash":"5c2cc24af2d6e8e82d71ae0221582d456bab5473","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/11.png","hash":"137f343fc21590dbfdbcdde1870d35ba1a1581ac","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/2.png","hash":"e9fe4b021ef0ea61c0a1235249fd00278206404a","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/4.png","hash":"45ad9cb25621904c742415db43bc79feb0f9f783","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/5.png","hash":"08c52c9a9a83141bd6d0aa4ead31576fc0e2e422","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/6.png","hash":"b448b9a73a7b7cba5b230f5180c0931f6ddff942","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/8.png","hash":"b3459303a8c1ea88b687e53e0f9d605ac2bfb349","modified":1551494127915},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/9.png","hash":"244c42171b5f2123f759abcbc469d1f134b65c5c","modified":1551494127915},{"_id":"public/download/image/Java核心技术卷1第9版.jpg","hash":"ffdf39963ca9c801810aa94e36929d23488ea980","modified":1551494128401},{"_id":"public/images/wechatpay.jpg","hash":"5a3cf2f356e2be712a174f587627013369849c3b","modified":1551494128405},{"_id":"public/images/alipay.jpg","hash":"2f6aeb9b9f331eefb13c69ad769205cef9cbec81","modified":1551494128406},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1551494128406},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1551494128407},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/1.png","hash":"9fbe12f2dfe99ad7baf0c85e45668c36ffbd3679","modified":1551494128407},{"_id":"public/原创/SDN/Vmware-Ubuntu14-04-mininet中的host如何访问外网/9.png","hash":"173db1e787ce16c0af3d0b44b39b8f40ce9ad7e6","modified":1551494128407},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/3.png","hash":"f5c473db1e880666115f5c92ed12059f6080866f","modified":1551494128407},{"_id":"public/原创/SDN/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/7.png","hash":"b15cb3b766af5b8217d4cfe4fc5d53b23f7a0730","modified":1551494128407},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1551494128413},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1551494128413},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1551494128414},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1551494128414},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1551494128414},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1551494128414},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1551494128414},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1551494128414},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1551494128414},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1551494128414},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1551494128414},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1551494128414},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1551494128414},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1551494128414},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1551494128414},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1551494128414},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1551494128415},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1551494128415},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1551494128415},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1551494128415},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1551494128415},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1551494128416},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1551494128416},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1551494128416},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1551494128416},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1551494128416},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1551494128416},{"_id":"public/404.html","hash":"b131af476632738a943170d5949063f8278ac5c1","modified":1551494128416},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1551494128416},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1551494128416},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1551494128416},{"_id":"public/css/main.css","hash":"10daf8a08ddb9d9a6642872d3bf8ccbd1a298c67","modified":1551494128416},{"_id":"public/download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg","hash":"1789637539989df7e7f9d3ee2483dc80c28053a9","modified":1551494128416},{"_id":"public/download/image/EffectiveJava中文版（第2版）.jpg","hash":"8ec66ee8cb7febf275324dd9f9363db4b413137d","modified":1551494128417},{"_id":"public/download/image/阿里巴巴Java开发手册.jpg","hash":"125bc7b80b15fa3ce4c2429d45b3856548ee9ef0","modified":1551494128417},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1551494128417},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1551494128417},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1551494128417},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1551494128423},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1551494128423},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1551494128423},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1551494128424},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1551494128424},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1551494128424},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1551494128424},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1551494128424},{"_id":"public/download/image/Redis实战.jpg","hash":"bfc9b7c70c02fefa633490789825925679a24a9f","modified":1551494128424},{"_id":"public/download/image/JAVA并发编程实战.jpg","hash":"523d570130fdaa7807dee709baa7971ba02abb11","modified":1551494128424},{"_id":"public/download/image/2018年美团点评技术年货（合）.jpg","hash":"f7ec53c6b3b851ebb401f48719621b330570da0c","modified":1551494128424},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1551494128430},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1551494128430},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1551494128438},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1551494128439},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1551494128445},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1551494128445},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1551494128446},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1551494128446},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1551494128447},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1551494128447},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1551494128447},{"_id":"public/images/myhead2.jpg","hash":"56898655e3ff2d9a84028b9a43bc3c1800bc631c","modified":1551494128447},{"_id":"public/download/image/重构_改善既有代码的设计[高清版].jpg","hash":"3a769d9bc1d9a8c344600d298ecae481a425b6b2","modified":1551494128447},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1551494128453},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1551494128453},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1551494128453},{"_id":"public/download/image/Head+First设计模式（中文版）.jpg","hash":"4059ff76caf9dfe54cbad1f73a1955e914d6f877","modified":1551494128453},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1551494128458},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1551494128458},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1551494128470},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1551494128474},{"_id":"public/images/myhead.jpg","hash":"9707dfd0809c36aea22dcdc0a64a436918888bb0","modified":1551494128474},{"_id":"public/download/book/阿里巴巴Java开发手册.pdf","hash":"d9a6da7ac5bff8f442131f61cf86fb96ab24d671","modified":1551494128477},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1551494128514},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1551494128552},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1551494128562},{"_id":"public/download/book/JAVA并发编程实战.pdf","hash":"a91ed7fa47581b0d9ed1ff5f3b3023e14d5b4e03","modified":1551494128639},{"_id":"public/download/book/重构_改善既有代码的设计[高清版].pdf","hash":"5e32c96db94fe4a2880df03e7a4cb548763b4cad","modified":1551494128974},{"_id":"public/download/book/Head+First设计模式（中文版）.pdf","hash":"fb37c1fbc204c0f27178b77df8bd28dcba6f2051","modified":1551494129106},{"_id":"public/download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf","hash":"80796b76366b418d62097926b037c9825713a4ce","modified":1551494129226},{"_id":"public/download/book/EffectiveJava中文版（第2版）.pdf","hash":"9a166f4c373d1a3f3c96675860f8248adc13fdfc","modified":1551494129410},{"_id":"public/download/book/Redis实战.pdf","hash":"1849512d73d730e1d45e58330258df076d43d4fe","modified":1551494129491},{"_id":"public/download/book/2018年美团点评技术年货（合）.pdf","hash":"3eb58f772cc3e350391366d2858d442503d1f71a","modified":1551494129615},{"_id":"public/download/book/Java核心技术卷1第9版.pdf","hash":"70b3c284f45722ac56b3afef0476152ebe90be96","modified":1551494129734}],"Category":[{"name":"原创","_id":"cjsqvjkde0005okq4ufrvcklf"},{"name":"SDN","parent":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdr000jokq4tdnkyfxz"},{"name":"Python","parent":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdv000sokq49q81d4ir"},{"name":"系统","parent":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdw000yokq4e5ys390a"},{"name":"网络","parent":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdy001cokq4wiiz58ub"}],"Data":[],"Page":[{"_content":"google-site-verification: googlec83ece8c0cfa58e5.html","source":"googlec83ece8c0cfa58e5.html","raw":"google-site-verification: googlec83ece8c0cfa58e5.html","date":"2019-03-01T14:01:27.683Z","updated":"2019-03-01T14:01:27.682Z","path":"googlec83ece8c0cfa58e5.html","title":"","comments":1,"layout":"page","_id":"cjsqvjkby0000okq4grlsm5vt","content":"google-site-verification: googlec83ece8c0cfa58e5.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: googlec83ece8c0cfa58e5.html"},{"title":"关于作者","date":"2019-02-23T15:49:25.000Z","comments":0,"_content":"<big>**作者介绍**</big>\n本人目前就职于美团点评，是一名后端开发程序猿，每日的工作就是搬砖打酱油，闲来无事搞个博客随便写点啥\n<big>**联系方式**</big>\n* Mail: JackieLeeWelas@gmail.com\n* QQ: 1148024090\n* Wechat: JackieLeeWelas","source":"about/index.md","raw":"---\ntitle: 关于作者\ndate: 2019-02-23 23:49:25\ncomments: false\n---\n<big>**作者介绍**</big>\n本人目前就职于美团点评，是一名后端开发程序猿，每日的工作就是搬砖打酱油，闲来无事搞个博客随便写点啥\n<big>**联系方式**</big>\n* Mail: JackieLeeWelas@gmail.com\n* QQ: 1148024090\n* Wechat: JackieLeeWelas","updated":"2019-02-27T14:45:55.426Z","path":"about/index.html","layout":"page","_id":"cjsqvjkdb0002okq4awpry6rh","content":"<p><big><strong>作者介绍</strong></big><br>本人目前就职于美团点评，是一名后端开发程序猿，每日的工作就是搬砖打酱油，闲来无事搞个博客随便写点啥</p>\n<p><big><strong>联系方式</strong></big></p>\n<ul>\n<li>Mail: <a href=\"mailto:JackieLeeWelas@gmail.com\" target=\"_blank\" rel=\"noopener\">JackieLeeWelas@gmail.com</a></li>\n<li>QQ: 1148024090</li>\n<li>Wechat: JackieLeeWelas</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><big><strong>作者介绍</strong></big><br>本人目前就职于美团点评，是一名后端开发程序猿，每日的工作就是搬砖打酱油，闲来无事搞个博客随便写点啥</p>\n<p><big><strong>联系方式</strong></big></p>\n<ul>\n<li>Mail: <a href=\"mailto:JackieLeeWelas@gmail.com\" target=\"_blank\" rel=\"noopener\">JackieLeeWelas@gmail.com</a></li>\n<li>QQ: 1148024090</li>\n<li>Wechat: JackieLeeWelas</li>\n</ul>\n"},{"title":"分类","type":"categories","comments":0,"date":"2019-02-23T15:49:25.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ntype: \"categories\"\ncomments: false\ndate: 2019-02-23 23:49:25\n---\n","updated":"2019-02-27T05:30:54.787Z","path":"categories/index.html","layout":"page","_id":"cjsqvjkdd0004okq4kts7g12s","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"书籍文档下载","comments":0,"date":"2019-02-25T14:29:49.000Z","_content":"<!-- <table>\n    <tr>\n        <td >\n          <center>\n            <img src=\"/download/image/2018年美团点评技术年货（合）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/2018年美团点评技术年货（合）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/EffectiveJava中文版（第2版）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/JAVA并发编程实战.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/JAVA并发编程实战.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/Java核心技术卷1第9版.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Java核心技术卷1第9版.pdf)\n          </center>\n        </td>\n    </tr>\n</table> -->\n\n<img src=\"/download/image/2018年美团点评技术年货（合）.jpg\">[点击下载](/download/book/2018年美团点评技术年货（合）.pdf)|<img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\">[点击下载](/download/book/EffectiveJava中文版（第2版）.pdf)|<img src=\"/download/image/JAVA并发编程实战.jpg\">[点击下载](/download/book/JAVA并发编程实战.pdf) \n:-: | :-: | :-: \n<img src=\"/download/image/Java核心技术卷1第9版.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Java核心技术卷1第9版.pdf)|<img src=\"/download/image/Redis实战.jpg\" width = \"200\"/>[点击下载](/download/book/Redis实战.pdf)|<img src=\"/download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg\" width = \"200\"/>[点击下载](/download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf) \n<img src=\"/download/image/阿里巴巴Java开发手册.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/阿里巴巴Java开发手册.pdf)|<img src=\"/download/image/重构_改善既有代码的设计[高清版].jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/重构_改善既有代码的设计[高清版].pdf)|<img src=\"/download/image/Head+First设计模式（中文版）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Head+First设计模式（中文版）.pdf)\n\n","source":"download/index.md","raw":"title: 书籍文档下载\ncomments: false\ndate: 2019-02-25 22:29:49\n---\n<!-- <table>\n    <tr>\n        <td >\n          <center>\n            <img src=\"/download/image/2018年美团点评技术年货（合）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/2018年美团点评技术年货（合）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/EffectiveJava中文版（第2版）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/JAVA并发编程实战.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/JAVA并发编程实战.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/Java核心技术卷1第9版.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Java核心技术卷1第9版.pdf)\n          </center>\n        </td>\n    </tr>\n</table> -->\n\n<img src=\"/download/image/2018年美团点评技术年货（合）.jpg\">[点击下载](/download/book/2018年美团点评技术年货（合）.pdf)|<img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\">[点击下载](/download/book/EffectiveJava中文版（第2版）.pdf)|<img src=\"/download/image/JAVA并发编程实战.jpg\">[点击下载](/download/book/JAVA并发编程实战.pdf) \n:-: | :-: | :-: \n<img src=\"/download/image/Java核心技术卷1第9版.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Java核心技术卷1第9版.pdf)|<img src=\"/download/image/Redis实战.jpg\" width = \"200\"/>[点击下载](/download/book/Redis实战.pdf)|<img src=\"/download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg\" width = \"200\"/>[点击下载](/download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf) \n<img src=\"/download/image/阿里巴巴Java开发手册.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/阿里巴巴Java开发手册.pdf)|<img src=\"/download/image/重构_改善既有代码的设计[高清版].jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/重构_改善既有代码的设计[高清版].pdf)|<img src=\"/download/image/Head+First设计模式（中文版）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Head+First设计模式（中文版）.pdf)\n\n","updated":"2019-02-28T16:15:46.000Z","path":"download/index.html","layout":"page","_id":"cjsqvjkdh0008okq4md1bu3mx","content":"<!-- <table>\n    <tr>\n        <td >\n          <center>\n            <img src=\"/download/image/2018年美团点评技术年货（合）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/2018年美团点评技术年货（合）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/EffectiveJava中文版（第2版）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/JAVA并发编程实战.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/JAVA并发编程实战.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/Java核心技术卷1第9版.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Java核心技术卷1第9版.pdf)\n          </center>\n        </td>\n    </tr>\n</table> -->\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img src=\"/download/image/2018年美团点评技术年货（合）.jpg\"><a href=\"/download/book/2018年美团点评技术年货（合）.pdf\">点击下载</a></th>\n<th style=\"text-align:center\"><img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\"><a href=\"/download/book/EffectiveJava中文版（第2版）.pdf\">点击下载</a></th>\n<th style=\"text-align:center\"><img src=\"/download/image/JAVA并发编程实战.jpg\"><a href=\"/download/book/JAVA并发编程实战.pdf\">点击下载</a> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"/download/image/Java核心技术卷1第9版.jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/Java核心技术卷1第9版.pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/Redis实战.jpg\" width=\"200\"><a href=\"/download/book/Redis实战.pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg\" width=\"200\"><a href=\"/download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf\">点击下载</a> </td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><img src=\"/download/image/阿里巴巴Java开发手册.jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/阿里巴巴Java开发手册.pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/重构_改善既有代码的设计[高清版].jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/重构_改善既有代码的设计[高清版].pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/Head+First设计模式（中文版）.jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/Head+First设计模式（中文版）.pdf\">点击下载</a></td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<!-- <table>\n    <tr>\n        <td >\n          <center>\n            <img src=\"/download/image/2018年美团点评技术年货（合）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/2018年美团点评技术年货（合）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/EffectiveJava中文版（第2版）.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/JAVA并发编程实战.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/JAVA并发编程实战.pdf)\n          </center>\n        </td>\n        <td >\n          <center>\n            <img src=\"/download/image/Java核心技术卷1第9版.jpg\" width = \"200\" height = \"400\">[点击下载](/download/book/Java核心技术卷1第9版.pdf)\n          </center>\n        </td>\n    </tr>\n</table> -->\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img src=\"/download/image/2018年美团点评技术年货（合）.jpg\"><a href=\"/download/book/2018年美团点评技术年货（合）.pdf\">点击下载</a></th>\n<th style=\"text-align:center\"><img src=\"/download/image/EffectiveJava中文版（第2版）.jpg\"><a href=\"/download/book/EffectiveJava中文版（第2版）.pdf\">点击下载</a></th>\n<th style=\"text-align:center\"><img src=\"/download/image/JAVA并发编程实战.jpg\"><a href=\"/download/book/JAVA并发编程实战.pdf\">点击下载</a> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"/download/image/Java核心技术卷1第9版.jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/Java核心技术卷1第9版.pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/Redis实战.jpg\" width=\"200\"><a href=\"/download/book/Redis实战.pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/深入理解Java虚拟机：JVM高级特性与最佳实践.jpg\" width=\"200\"><a href=\"/download/book/深入理解Java虚拟机：JVM高级特性与最佳实践.pdf\">点击下载</a> </td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><img src=\"/download/image/阿里巴巴Java开发手册.jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/阿里巴巴Java开发手册.pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/重构_改善既有代码的设计[高清版].jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/重构_改善既有代码的设计[高清版].pdf\">点击下载</a></td>\n<td style=\"text-align:center\"><img src=\"/download/image/Head+First设计模式（中文版）.jpg\" width=\"200\" height=\"400\"><a href=\"/download/book/Head+First设计模式（中文版）.pdf\">点击下载</a></td>\n</tr>\n</tbody>\n</table>\n"},{"title":"好东西","comments":0,"date":"2019-02-27T14:50:09.000Z","_content":"<big>**实用工具**</big>\n1. [json格式化工具](http://www.kjson.com/)\n2. [时间戳转换](http://tools.sharejs.com/unixtime.html)\n3. [在线文本差异对比](http://www.jq22.com/textDifference)\n4. [在线Cron表达式生成器](http://cron.qqe2.com/)\n5. [站长工具](http://tool.chinaz.com/)\n6. [JVM参数设置：JVM Settings](http://jvmmemory.com/)\n7. [正则表达式在线测试](http://tool.chinaz.com/tools/regexgenerate)\n8. [二维码生成器](https://cli.im/)\n9. [经纬度坐标拾取器](http://api.map.baidu.com/lbsapi/getpoint/index.html)\n10. [Url编码解码](https://meyerweb.com/eric/tools/dencoder/)\n11. [代码在线运行](https://tool.lu/coderunner/)\n\n<big>**资源网站**</big>\n- **免费无版权高清图片网站**\n1. [Unsplash](https://unsplash.com/)\n2. [Pexel](https://www.pexels.com/)\n3. [Stocksnap.io](https://stocksnap.io/)\n4. [Gratisography](https://gratisography.com/)\n5. [Pixabay](https://pixabay.com/)\n6. [图标:Flaticon](https://www.flaticon.com/)\n7. [图标:Easyicon](https://www.easyicon.net/)\n8. [SSYER](https://www.ssyer.com/home)\n9. [泼辣有图](http://www.polayoutu.com/collections)\n- **免费书籍下载网站**\n- **免费电影下载网站**\n\n<center>持续更新。。。<center>","source":"favorite/index.md","raw":"title: 好东西\ncomments: false\ndate: 2019-02-27 22:50:09\n---\n<big>**实用工具**</big>\n1. [json格式化工具](http://www.kjson.com/)\n2. [时间戳转换](http://tools.sharejs.com/unixtime.html)\n3. [在线文本差异对比](http://www.jq22.com/textDifference)\n4. [在线Cron表达式生成器](http://cron.qqe2.com/)\n5. [站长工具](http://tool.chinaz.com/)\n6. [JVM参数设置：JVM Settings](http://jvmmemory.com/)\n7. [正则表达式在线测试](http://tool.chinaz.com/tools/regexgenerate)\n8. [二维码生成器](https://cli.im/)\n9. [经纬度坐标拾取器](http://api.map.baidu.com/lbsapi/getpoint/index.html)\n10. [Url编码解码](https://meyerweb.com/eric/tools/dencoder/)\n11. [代码在线运行](https://tool.lu/coderunner/)\n\n<big>**资源网站**</big>\n- **免费无版权高清图片网站**\n1. [Unsplash](https://unsplash.com/)\n2. [Pexel](https://www.pexels.com/)\n3. [Stocksnap.io](https://stocksnap.io/)\n4. [Gratisography](https://gratisography.com/)\n5. [Pixabay](https://pixabay.com/)\n6. [图标:Flaticon](https://www.flaticon.com/)\n7. [图标:Easyicon](https://www.easyicon.net/)\n8. [SSYER](https://www.ssyer.com/home)\n9. [泼辣有图](http://www.polayoutu.com/collections)\n- **免费书籍下载网站**\n- **免费电影下载网站**\n\n<center>持续更新。。。<center>","updated":"2019-02-28T16:18:20.723Z","path":"favorite/index.html","layout":"page","_id":"cjsqvjkiq001yokq4gsozdgsr","content":"<p><big><strong>实用工具</strong></big></p>\n<ol>\n<li><a href=\"http://www.kjson.com/\" target=\"_blank\" rel=\"noopener\">json格式化工具</a></li>\n<li><a href=\"http://tools.sharejs.com/unixtime.html\" target=\"_blank\" rel=\"noopener\">时间戳转换</a></li>\n<li><a href=\"http://www.jq22.com/textDifference\" target=\"_blank\" rel=\"noopener\">在线文本差异对比</a></li>\n<li><a href=\"http://cron.qqe2.com/\" target=\"_blank\" rel=\"noopener\">在线Cron表达式生成器</a></li>\n<li><a href=\"http://tool.chinaz.com/\" target=\"_blank\" rel=\"noopener\">站长工具</a></li>\n<li><a href=\"http://jvmmemory.com/\" target=\"_blank\" rel=\"noopener\">JVM参数设置：JVM Settings</a></li>\n<li><a href=\"http://tool.chinaz.com/tools/regexgenerate\" target=\"_blank\" rel=\"noopener\">正则表达式在线测试</a></li>\n<li><a href=\"https://cli.im/\" target=\"_blank\" rel=\"noopener\">二维码生成器</a></li>\n<li><a href=\"http://api.map.baidu.com/lbsapi/getpoint/index.html\" target=\"_blank\" rel=\"noopener\">经纬度坐标拾取器</a></li>\n<li><a href=\"https://meyerweb.com/eric/tools/dencoder/\" target=\"_blank\" rel=\"noopener\">Url编码解码</a></li>\n<li><a href=\"https://tool.lu/coderunner/\" target=\"_blank\" rel=\"noopener\">代码在线运行</a></li>\n</ol>\n<p><big><strong>资源网站</strong></big></p>\n<ul>\n<li><strong>免费无版权高清图片网站</strong></li>\n</ul>\n<ol>\n<li><a href=\"https://unsplash.com/\" target=\"_blank\" rel=\"noopener\">Unsplash</a></li>\n<li><a href=\"https://www.pexels.com/\" target=\"_blank\" rel=\"noopener\">Pexel</a></li>\n<li><a href=\"https://stocksnap.io/\" target=\"_blank\" rel=\"noopener\">Stocksnap.io</a></li>\n<li><a href=\"https://gratisography.com/\" target=\"_blank\" rel=\"noopener\">Gratisography</a></li>\n<li><a href=\"https://pixabay.com/\" target=\"_blank\" rel=\"noopener\">Pixabay</a></li>\n<li><a href=\"https://www.flaticon.com/\" target=\"_blank\" rel=\"noopener\">图标:Flaticon</a></li>\n<li><a href=\"https://www.easyicon.net/\" target=\"_blank\" rel=\"noopener\">图标:Easyicon</a></li>\n<li><a href=\"https://www.ssyer.com/home\" target=\"_blank\" rel=\"noopener\">SSYER</a></li>\n<li><a href=\"http://www.polayoutu.com/collections\" target=\"_blank\" rel=\"noopener\">泼辣有图</a></li>\n</ol>\n<ul>\n<li><strong>免费书籍下载网站</strong></li>\n<li><strong>免费电影下载网站</strong></li>\n</ul>\n<p><center>持续更新。。。<center></center></center></p>\n","site":{"data":{}},"excerpt":"","more":"<p><big><strong>实用工具</strong></big></p>\n<ol>\n<li><a href=\"http://www.kjson.com/\" target=\"_blank\" rel=\"noopener\">json格式化工具</a></li>\n<li><a href=\"http://tools.sharejs.com/unixtime.html\" target=\"_blank\" rel=\"noopener\">时间戳转换</a></li>\n<li><a href=\"http://www.jq22.com/textDifference\" target=\"_blank\" rel=\"noopener\">在线文本差异对比</a></li>\n<li><a href=\"http://cron.qqe2.com/\" target=\"_blank\" rel=\"noopener\">在线Cron表达式生成器</a></li>\n<li><a href=\"http://tool.chinaz.com/\" target=\"_blank\" rel=\"noopener\">站长工具</a></li>\n<li><a href=\"http://jvmmemory.com/\" target=\"_blank\" rel=\"noopener\">JVM参数设置：JVM Settings</a></li>\n<li><a href=\"http://tool.chinaz.com/tools/regexgenerate\" target=\"_blank\" rel=\"noopener\">正则表达式在线测试</a></li>\n<li><a href=\"https://cli.im/\" target=\"_blank\" rel=\"noopener\">二维码生成器</a></li>\n<li><a href=\"http://api.map.baidu.com/lbsapi/getpoint/index.html\" target=\"_blank\" rel=\"noopener\">经纬度坐标拾取器</a></li>\n<li><a href=\"https://meyerweb.com/eric/tools/dencoder/\" target=\"_blank\" rel=\"noopener\">Url编码解码</a></li>\n<li><a href=\"https://tool.lu/coderunner/\" target=\"_blank\" rel=\"noopener\">代码在线运行</a></li>\n</ol>\n<p><big><strong>资源网站</strong></big></p>\n<ul>\n<li><strong>免费无版权高清图片网站</strong></li>\n</ul>\n<ol>\n<li><a href=\"https://unsplash.com/\" target=\"_blank\" rel=\"noopener\">Unsplash</a></li>\n<li><a href=\"https://www.pexels.com/\" target=\"_blank\" rel=\"noopener\">Pexel</a></li>\n<li><a href=\"https://stocksnap.io/\" target=\"_blank\" rel=\"noopener\">Stocksnap.io</a></li>\n<li><a href=\"https://gratisography.com/\" target=\"_blank\" rel=\"noopener\">Gratisography</a></li>\n<li><a href=\"https://pixabay.com/\" target=\"_blank\" rel=\"noopener\">Pixabay</a></li>\n<li><a href=\"https://www.flaticon.com/\" target=\"_blank\" rel=\"noopener\">图标:Flaticon</a></li>\n<li><a href=\"https://www.easyicon.net/\" target=\"_blank\" rel=\"noopener\">图标:Easyicon</a></li>\n<li><a href=\"https://www.ssyer.com/home\" target=\"_blank\" rel=\"noopener\">SSYER</a></li>\n<li><a href=\"http://www.polayoutu.com/collections\" target=\"_blank\" rel=\"noopener\">泼辣有图</a></li>\n</ol>\n<ul>\n<li><strong>免费书籍下载网站</strong></li>\n<li><strong>免费电影下载网站</strong></li>\n</ul>\n<p><center>持续更新。。。<center></center></center></p>\n"},{"title":"标签","type":"tags","comments":0,"date":"2019-02-24T15:49:34.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: \"tags\"\ncomments: false\ndate: 2019-02-24 23:49:34\n---\n","updated":"2019-02-27T05:30:42.452Z","path":"tags/index.html","layout":"page","_id":"cjsqvjkir001zokq4islaqvbd","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Floodligh Web UI显示的host比实际多且不会被清除的原因及解决方法","date":"2016-01-09T14:24:24.000Z","copyright":true,"_content":"每次启动完floodlight控制器，在http://127.0.0.1:8080/ui/index.html 中打开floodlight的Web UI界面后，发现host总是会比我定义的多，打开拓扑图界面也很混乱。网上查了下，说是因为OVS的一个local port会去发现外部网络的拓扑，只要禁用OVS的这个端口就可以了，有兴趣的可以试试那个方法。下面是我的实验过程及解决方法。\n\n**命令：**\n```\nsudo mn --controller=remote,ip=127.0.0.1,port=6653 --topo=tree,2\n```\n**如下图：**\n<center>![图1](1.png)</center>\n<center>![图2](2.png)</center>\n这样都分不清哪个host是我定义的，交换机倒还好，都很清晰。\n\n所以我在用mininet创建网络拓扑的时候使用了如下命令：\n```\nsudo mn --controller=remote,ip=127.0.0.1,port=6653 --mac --topo=tree,2\n```\n多加了个mac参数，表示自动设置host的mac，会使我们的host的mac很有规律，如下图：\n<center>![图3](3.png)</center>\n虽然这样还没解决主机多出来几个的问题，但至少我们能很快分清哪几个使我们的host，这时的host的mac地址，会从00:00:00:00:00:01开始分配。\n\n**1. 方法一：**   \n最后我解决host多于实际的方法是先启动mininet，再启动floodlight，因为交换机启动时，链路需要协商，如果先启动floodlight，就会把这些数据包也记录下来。所以先启动mininet，等OVS稳定下来，再启动floodlight控制器，这样就不会把OVS协商链路时发现的一些主机也记录进去。\n<center>![图4](4.png)</center>\n<center>![图5](5.png)</center>\n虽然一开始，启动mininet时，不能连接上控制器，但在启动控制器后，mininet会主动与控制器连接。\n\n还有一个问题就是，当退出mininet后，UI上的交换机会立马没了，而主机还在。\n<center>![图6](6.png)</center>\n然后再用mininet创建网络，UI上的原来的host不变，host在这基础上又会增加几个，每次退出再创建都会多几个host。\n<center>![图7](7.png)</center>\n上面是我重复三次这样的过程后生成的host，本来只会生成四个host，如今已越来越多。这样很烦，解决的方法是，退出mininet后，就刷新一遍网页，注意不是直接按F5刷新，这样会出错，是再输一次：http://127.0.0.1:8080/ui/index.html 按回车。这时host才会从网页中清除：\n<center>![图8](8.png)</center>\n后面再创建拓扑的时候就重复上面的过程，先启动mininet，再启动floodlight，每次退出mininet，就刷新一遍网页。\n\n**2. 方法二：**\nGoogle查了下发现了其他的几种方法，试了下面的方法，感觉比之前的好了，但还是有点小问题，可能只是我机子的问题。仅作参考。\n在floodlight的日志输出里有很多IPv6的信息。所以这个解决方法是禁用IPv6。\n用命令：`sudo vim /etc/sysctl.conf` ，然后在最后添加下面三行：\n```\n    net.ipv6.conf.all.disable_ipv6 = 1\n    net.ipv6.conf.default.disable_ipv6 = 1\n    net.ipv6.conf.lo.disable_ipv6 = 1\n```\n保存后重启电脑或者运行：`sudo sysctl –p`\n上面那种禁用IPv6的方法不一定都适用，使用其他禁用方法也可以。\n\n**3. 方法三：**\n上面的方法二有时候不怎么好，后面我又找到了另外一种更彻底的方法：\n我的OVS版本是 2.0.1：\n<center>![图9](9.png)</center>\nUbuntu版本是3.13:\n<center>![图10](10.png)</center>\nGoogle上说是OVS版本和Ubuntu的问题，OVS 2.0.1版本支持Ubuntu 2.6.32 到 3.10，所以我的问题出在OVS版本太低，或者Ubuntu版本过高。解决方法是升级OVS或者降低Ubuntu版本。\n\n运行如下命令：\n```\nsudoapt-get install openvswitch-controller openvswitch-switchopenvswitch-datapath-source\n```\n把OVS更新到2.0.2：\n<center>![图11](11.png)</center>\n然后问题就解决了，至少目前是解决了，彻不彻底后面再看。\n\n----","source":"_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法.md","raw":"---\ntitle: Floodligh Web UI显示的host比实际多且不会被清除的原因及解决方法\ndate: 2016-01-09 22:24:24\ntags: [SDN,Floodlight]\ncategories:\n- 原创\n- SDN\ncopyright: true\n---\n每次启动完floodlight控制器，在http://127.0.0.1:8080/ui/index.html 中打开floodlight的Web UI界面后，发现host总是会比我定义的多，打开拓扑图界面也很混乱。网上查了下，说是因为OVS的一个local port会去发现外部网络的拓扑，只要禁用OVS的这个端口就可以了，有兴趣的可以试试那个方法。下面是我的实验过程及解决方法。\n\n**命令：**\n```\nsudo mn --controller=remote,ip=127.0.0.1,port=6653 --topo=tree,2\n```\n**如下图：**\n<center>![图1](1.png)</center>\n<center>![图2](2.png)</center>\n这样都分不清哪个host是我定义的，交换机倒还好，都很清晰。\n\n所以我在用mininet创建网络拓扑的时候使用了如下命令：\n```\nsudo mn --controller=remote,ip=127.0.0.1,port=6653 --mac --topo=tree,2\n```\n多加了个mac参数，表示自动设置host的mac，会使我们的host的mac很有规律，如下图：\n<center>![图3](3.png)</center>\n虽然这样还没解决主机多出来几个的问题，但至少我们能很快分清哪几个使我们的host，这时的host的mac地址，会从00:00:00:00:00:01开始分配。\n\n**1. 方法一：**   \n最后我解决host多于实际的方法是先启动mininet，再启动floodlight，因为交换机启动时，链路需要协商，如果先启动floodlight，就会把这些数据包也记录下来。所以先启动mininet，等OVS稳定下来，再启动floodlight控制器，这样就不会把OVS协商链路时发现的一些主机也记录进去。\n<center>![图4](4.png)</center>\n<center>![图5](5.png)</center>\n虽然一开始，启动mininet时，不能连接上控制器，但在启动控制器后，mininet会主动与控制器连接。\n\n还有一个问题就是，当退出mininet后，UI上的交换机会立马没了，而主机还在。\n<center>![图6](6.png)</center>\n然后再用mininet创建网络，UI上的原来的host不变，host在这基础上又会增加几个，每次退出再创建都会多几个host。\n<center>![图7](7.png)</center>\n上面是我重复三次这样的过程后生成的host，本来只会生成四个host，如今已越来越多。这样很烦，解决的方法是，退出mininet后，就刷新一遍网页，注意不是直接按F5刷新，这样会出错，是再输一次：http://127.0.0.1:8080/ui/index.html 按回车。这时host才会从网页中清除：\n<center>![图8](8.png)</center>\n后面再创建拓扑的时候就重复上面的过程，先启动mininet，再启动floodlight，每次退出mininet，就刷新一遍网页。\n\n**2. 方法二：**\nGoogle查了下发现了其他的几种方法，试了下面的方法，感觉比之前的好了，但还是有点小问题，可能只是我机子的问题。仅作参考。\n在floodlight的日志输出里有很多IPv6的信息。所以这个解决方法是禁用IPv6。\n用命令：`sudo vim /etc/sysctl.conf` ，然后在最后添加下面三行：\n```\n    net.ipv6.conf.all.disable_ipv6 = 1\n    net.ipv6.conf.default.disable_ipv6 = 1\n    net.ipv6.conf.lo.disable_ipv6 = 1\n```\n保存后重启电脑或者运行：`sudo sysctl –p`\n上面那种禁用IPv6的方法不一定都适用，使用其他禁用方法也可以。\n\n**3. 方法三：**\n上面的方法二有时候不怎么好，后面我又找到了另外一种更彻底的方法：\n我的OVS版本是 2.0.1：\n<center>![图9](9.png)</center>\nUbuntu版本是3.13:\n<center>![图10](10.png)</center>\nGoogle上说是OVS版本和Ubuntu的问题，OVS 2.0.1版本支持Ubuntu 2.6.32 到 3.10，所以我的问题出在OVS版本太低，或者Ubuntu版本过高。解决方法是升级OVS或者降低Ubuntu版本。\n\n运行如下命令：\n```\nsudoapt-get install openvswitch-controller openvswitch-switchopenvswitch-datapath-source\n```\n把OVS更新到2.0.2：\n<center>![图11](11.png)</center>\n然后问题就解决了，至少目前是解决了，彻不彻底后面再看。\n\n----","slug":"Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法","published":1,"updated":"2019-02-28T15:29:20.663Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkd70001okq4hxr1iynh","content":"<p>每次启动完floodlight控制器，在<a href=\"http://127.0.0.1:8080/ui/index.html\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/ui/index.html</a> 中打开floodlight的Web UI界面后，发现host总是会比我定义的多，打开拓扑图界面也很混乱。网上查了下，说是因为OVS的一个local port会去发现外部网络的拓扑，只要禁用OVS的这个端口就可以了，有兴趣的可以试试那个方法。下面是我的实验过程及解决方法。</p>\n<p><strong>命令：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mn --controller=remote,ip=127.0.0.1,port=6653 --topo=tree,2</span><br></pre></td></tr></table></figure></p>\n<p><strong>如下图：</strong></p>\n<p><center><img src=\"1.png\" alt=\"图1\"></center></p>\n<p><center><img src=\"2.png\" alt=\"图2\"></center><br>这样都分不清哪个host是我定义的，交换机倒还好，都很清晰。</p>\n<p>所以我在用mininet创建网络拓扑的时候使用了如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mn --controller=remote,ip=127.0.0.1,port=6653 --mac --topo=tree,2</span><br></pre></td></tr></table></figure></p>\n<p>多加了个mac参数，表示自动设置host的mac，会使我们的host的mac很有规律，如下图：</p>\n<p><center><img src=\"3.png\" alt=\"图3\"></center><br>虽然这样还没解决主机多出来几个的问题，但至少我们能很快分清哪几个使我们的host，这时的host的mac地址，会从00:00:00:00:00:01开始分配。</p>\n<p><strong>1. 方法一：</strong><br>最后我解决host多于实际的方法是先启动mininet，再启动floodlight，因为交换机启动时，链路需要协商，如果先启动floodlight，就会把这些数据包也记录下来。所以先启动mininet，等OVS稳定下来，再启动floodlight控制器，这样就不会把OVS协商链路时发现的一些主机也记录进去。</p>\n<p><center><img src=\"4.png\" alt=\"图4\"></center></p>\n<p><center><img src=\"5.png\" alt=\"图5\"></center><br>虽然一开始，启动mininet时，不能连接上控制器，但在启动控制器后，mininet会主动与控制器连接。</p>\n<p>还有一个问题就是，当退出mininet后，UI上的交换机会立马没了，而主机还在。</p>\n<p><center><img src=\"6.png\" alt=\"图6\"></center><br>然后再用mininet创建网络，UI上的原来的host不变，host在这基础上又会增加几个，每次退出再创建都会多几个host。</p>\n<p><center><img src=\"7.png\" alt=\"图7\"></center><br>上面是我重复三次这样的过程后生成的host，本来只会生成四个host，如今已越来越多。这样很烦，解决的方法是，退出mininet后，就刷新一遍网页，注意不是直接按F5刷新，这样会出错，是再输一次：<a href=\"http://127.0.0.1:8080/ui/index.html\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/ui/index.html</a> 按回车。这时host才会从网页中清除：</p>\n<p><center><img src=\"8.png\" alt=\"图8\"></center><br>后面再创建拓扑的时候就重复上面的过程，先启动mininet，再启动floodlight，每次退出mininet，就刷新一遍网页。</p>\n<p><strong>2. 方法二：</strong><br>Google查了下发现了其他的几种方法，试了下面的方法，感觉比之前的好了，但还是有点小问题，可能只是我机子的问题。仅作参考。<br>在floodlight的日志输出里有很多IPv6的信息。所以这个解决方法是禁用IPv6。<br>用命令：<code>sudo vim /etc/sysctl.conf</code> ，然后在最后添加下面三行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class=\"line\">    net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class=\"line\">    net.ipv6.conf.lo.disable_ipv6 = 1</span><br></pre></td></tr></table></figure></p>\n<p>保存后重启电脑或者运行：<code>sudo sysctl –p</code><br>上面那种禁用IPv6的方法不一定都适用，使用其他禁用方法也可以。</p>\n<p><strong>3. 方法三：</strong><br>上面的方法二有时候不怎么好，后面我又找到了另外一种更彻底的方法：<br>我的OVS版本是 2.0.1：</p>\n<p><center><img src=\"9.png\" alt=\"图9\"></center><br>Ubuntu版本是3.13:</p>\n<p><center><img src=\"10.png\" alt=\"图10\"></center><br>Google上说是OVS版本和Ubuntu的问题，OVS 2.0.1版本支持Ubuntu 2.6.32 到 3.10，所以我的问题出在OVS版本太低，或者Ubuntu版本过高。解决方法是升级OVS或者降低Ubuntu版本。</p>\n<p>运行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudoapt-get install openvswitch-controller openvswitch-switchopenvswitch-datapath-source</span><br></pre></td></tr></table></figure></p>\n<p>把OVS更新到2.0.2：</p>\n<p><center><img src=\"11.png\" alt=\"图11\"></center><br>然后问题就解决了，至少目前是解决了，彻不彻底后面再看。</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>每次启动完floodlight控制器，在<a href=\"http://127.0.0.1:8080/ui/index.html\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/ui/index.html</a> 中打开floodlight的Web UI界面后，发现host总是会比我定义的多，打开拓扑图界面也很混乱。网上查了下，说是因为OVS的一个local port会去发现外部网络的拓扑，只要禁用OVS的这个端口就可以了，有兴趣的可以试试那个方法。下面是我的实验过程及解决方法。</p>\n<p><strong>命令：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mn --controller=remote,ip=127.0.0.1,port=6653 --topo=tree,2</span><br></pre></td></tr></table></figure></p>\n<p><strong>如下图：</strong></p>\n<p><center><img src=\"1.png\" alt=\"图1\"></center></p>\n<p><center><img src=\"2.png\" alt=\"图2\"></center><br>这样都分不清哪个host是我定义的，交换机倒还好，都很清晰。</p>\n<p>所以我在用mininet创建网络拓扑的时候使用了如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mn --controller=remote,ip=127.0.0.1,port=6653 --mac --topo=tree,2</span><br></pre></td></tr></table></figure></p>\n<p>多加了个mac参数，表示自动设置host的mac，会使我们的host的mac很有规律，如下图：</p>\n<p><center><img src=\"3.png\" alt=\"图3\"></center><br>虽然这样还没解决主机多出来几个的问题，但至少我们能很快分清哪几个使我们的host，这时的host的mac地址，会从00:00:00:00:00:01开始分配。</p>\n<p><strong>1. 方法一：</strong><br>最后我解决host多于实际的方法是先启动mininet，再启动floodlight，因为交换机启动时，链路需要协商，如果先启动floodlight，就会把这些数据包也记录下来。所以先启动mininet，等OVS稳定下来，再启动floodlight控制器，这样就不会把OVS协商链路时发现的一些主机也记录进去。</p>\n<p><center><img src=\"4.png\" alt=\"图4\"></center></p>\n<p><center><img src=\"5.png\" alt=\"图5\"></center><br>虽然一开始，启动mininet时，不能连接上控制器，但在启动控制器后，mininet会主动与控制器连接。</p>\n<p>还有一个问题就是，当退出mininet后，UI上的交换机会立马没了，而主机还在。</p>\n<p><center><img src=\"6.png\" alt=\"图6\"></center><br>然后再用mininet创建网络，UI上的原来的host不变，host在这基础上又会增加几个，每次退出再创建都会多几个host。</p>\n<p><center><img src=\"7.png\" alt=\"图7\"></center><br>上面是我重复三次这样的过程后生成的host，本来只会生成四个host，如今已越来越多。这样很烦，解决的方法是，退出mininet后，就刷新一遍网页，注意不是直接按F5刷新，这样会出错，是再输一次：<a href=\"http://127.0.0.1:8080/ui/index.html\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/ui/index.html</a> 按回车。这时host才会从网页中清除：</p>\n<p><center><img src=\"8.png\" alt=\"图8\"></center><br>后面再创建拓扑的时候就重复上面的过程，先启动mininet，再启动floodlight，每次退出mininet，就刷新一遍网页。</p>\n<p><strong>2. 方法二：</strong><br>Google查了下发现了其他的几种方法，试了下面的方法，感觉比之前的好了，但还是有点小问题，可能只是我机子的问题。仅作参考。<br>在floodlight的日志输出里有很多IPv6的信息。所以这个解决方法是禁用IPv6。<br>用命令：<code>sudo vim /etc/sysctl.conf</code> ，然后在最后添加下面三行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    net.ipv6.conf.all.disable_ipv6 = 1</span><br><span class=\"line\">    net.ipv6.conf.default.disable_ipv6 = 1</span><br><span class=\"line\">    net.ipv6.conf.lo.disable_ipv6 = 1</span><br></pre></td></tr></table></figure></p>\n<p>保存后重启电脑或者运行：<code>sudo sysctl –p</code><br>上面那种禁用IPv6的方法不一定都适用，使用其他禁用方法也可以。</p>\n<p><strong>3. 方法三：</strong><br>上面的方法二有时候不怎么好，后面我又找到了另外一种更彻底的方法：<br>我的OVS版本是 2.0.1：</p>\n<p><center><img src=\"9.png\" alt=\"图9\"></center><br>Ubuntu版本是3.13:</p>\n<p><center><img src=\"10.png\" alt=\"图10\"></center><br>Google上说是OVS版本和Ubuntu的问题，OVS 2.0.1版本支持Ubuntu 2.6.32 到 3.10，所以我的问题出在OVS版本太低，或者Ubuntu版本过高。解决方法是升级OVS或者降低Ubuntu版本。</p>\n<p>运行如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudoapt-get install openvswitch-controller openvswitch-switchopenvswitch-datapath-source</span><br></pre></td></tr></table></figure></p>\n<p>把OVS更新到2.0.2：</p>\n<p><center><img src=\"11.png\" alt=\"图11\"></center><br>然后问题就解决了，至少目前是解决了，彻不彻底后面再看。</p>\n<hr>\n"},{"title":"Floodlight控制器创建一个模块的简单过程","date":"2015-12-24T09:07:18.000Z","copyright":true,"_content":"假设floodlight和eclipse的安装以及配置已经完成，如果还没有，请参考：\nhttps://floodlight.atlassian.net/wiki/display/floodlightcontroller/Installation+Guide\n\n很简单的过程，大神就不用看了，主要是记下来方便自己以后用，也给需要的人参考，以下过程全部在eclipse中操作完成\n1. 在floodlight项目的src/main/java包上右键新建Java类，填上包路径和Java类名以及继承的类（继承的类一般都包括\"IOFMessageListener\" 和 \"IFloodlightModule\"），然后就会自动生成一些需要重写的函数。\n\n2. 为了使我们新建的这个类监听到OpenFlow消息，需要在FloodlightProvider （一个IFloodlightProviderService类）注册我们的类。\n\n3. 我们需要修改getModuleDependencies()函数，用来告诉模块装载器我们依赖它。getModuleDependencies()函数是第一步添加父类后自动生成的函数。\n\n4. 接着编写init方法，init方法在控制器启动的时候就会调用，用来加载依赖模块和初始化数据结构。\n\n5. 然后实现基本的监听器，在startUP方法中注册PACKET_IN消息\n\n6. 为OFMessage监听器加上一个ID，这步在getName()中实现\n\n7. 关键的一步，定义接收到PACKET_IN消息后的行为，在receive()中实现，返回Command.CONTINUE以允许这个消息继续被其他的消息处理模块接收到。\n\n8. 我们还需要为之前我们创建的模块注册，这样floodlight启动的时候就可以加载我们的模块，在这一步，首先我们得告诉加载器我们的模块的存在，这可以在src/main/resources/META-INF/services/net.floodlightcontroller.core.module.IFloodlightModule文件里添加我们的模块的类\n\n9. 最后，我们还必须在floodlight模块配置文件中添加我们创建的模块，这个是在src/main/resources/floodlightdefault.properties文件里的floodlight.modules里添加我们的包和类的全路径。\n-----","source":"_posts/Floodlight控制器创建一个模块的简单过程.md","raw":"---\ntitle: Floodlight控制器创建一个模块的简单过程\ndate: 2015-12-24 17:07:18\ntags: [SDN,Floodlight]\ncategories: \n- 原创\n- SDN\ncopyright: true\n---\n假设floodlight和eclipse的安装以及配置已经完成，如果还没有，请参考：\nhttps://floodlight.atlassian.net/wiki/display/floodlightcontroller/Installation+Guide\n\n很简单的过程，大神就不用看了，主要是记下来方便自己以后用，也给需要的人参考，以下过程全部在eclipse中操作完成\n1. 在floodlight项目的src/main/java包上右键新建Java类，填上包路径和Java类名以及继承的类（继承的类一般都包括\"IOFMessageListener\" 和 \"IFloodlightModule\"），然后就会自动生成一些需要重写的函数。\n\n2. 为了使我们新建的这个类监听到OpenFlow消息，需要在FloodlightProvider （一个IFloodlightProviderService类）注册我们的类。\n\n3. 我们需要修改getModuleDependencies()函数，用来告诉模块装载器我们依赖它。getModuleDependencies()函数是第一步添加父类后自动生成的函数。\n\n4. 接着编写init方法，init方法在控制器启动的时候就会调用，用来加载依赖模块和初始化数据结构。\n\n5. 然后实现基本的监听器，在startUP方法中注册PACKET_IN消息\n\n6. 为OFMessage监听器加上一个ID，这步在getName()中实现\n\n7. 关键的一步，定义接收到PACKET_IN消息后的行为，在receive()中实现，返回Command.CONTINUE以允许这个消息继续被其他的消息处理模块接收到。\n\n8. 我们还需要为之前我们创建的模块注册，这样floodlight启动的时候就可以加载我们的模块，在这一步，首先我们得告诉加载器我们的模块的存在，这可以在src/main/resources/META-INF/services/net.floodlightcontroller.core.module.IFloodlightModule文件里添加我们的模块的类\n\n9. 最后，我们还必须在floodlight模块配置文件中添加我们创建的模块，这个是在src/main/resources/floodlightdefault.properties文件里的floodlight.modules里添加我们的包和类的全路径。\n-----","slug":"Floodlight控制器创建一个模块的简单过程","published":1,"updated":"2019-02-27T12:20:03.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkdc0003okq4ga2zp9z7","content":"<p>假设floodlight和eclipse的安装以及配置已经完成，如果还没有，请参考：<br><a href=\"https://floodlight.atlassian.net/wiki/display/floodlightcontroller/Installation+Guide\" target=\"_blank\" rel=\"noopener\">https://floodlight.atlassian.net/wiki/display/floodlightcontroller/Installation+Guide</a></p>\n<p>很简单的过程，大神就不用看了，主要是记下来方便自己以后用，也给需要的人参考，以下过程全部在eclipse中操作完成</p>\n<ol>\n<li><p>在floodlight项目的src/main/java包上右键新建Java类，填上包路径和Java类名以及继承的类（继承的类一般都包括”IOFMessageListener” 和 “IFloodlightModule”），然后就会自动生成一些需要重写的函数。</p>\n</li>\n<li><p>为了使我们新建的这个类监听到OpenFlow消息，需要在FloodlightProvider （一个IFloodlightProviderService类）注册我们的类。</p>\n</li>\n<li><p>我们需要修改getModuleDependencies()函数，用来告诉模块装载器我们依赖它。getModuleDependencies()函数是第一步添加父类后自动生成的函数。</p>\n</li>\n<li><p>接着编写init方法，init方法在控制器启动的时候就会调用，用来加载依赖模块和初始化数据结构。</p>\n</li>\n<li><p>然后实现基本的监听器，在startUP方法中注册PACKET_IN消息</p>\n</li>\n<li><p>为OFMessage监听器加上一个ID，这步在getName()中实现</p>\n</li>\n<li><p>关键的一步，定义接收到PACKET_IN消息后的行为，在receive()中实现，返回Command.CONTINUE以允许这个消息继续被其他的消息处理模块接收到。</p>\n</li>\n<li><p>我们还需要为之前我们创建的模块注册，这样floodlight启动的时候就可以加载我们的模块，在这一步，首先我们得告诉加载器我们的模块的存在，这可以在src/main/resources/META-INF/services/net.floodlightcontroller.core.module.IFloodlightModule文件里添加我们的模块的类</p>\n</li>\n<li><p>最后，我们还必须在floodlight模块配置文件中添加我们创建的模块，这个是在src/main/resources/floodlightdefault.properties文件里的floodlight.modules里添加我们的包和类的全路径。</p>\n</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>假设floodlight和eclipse的安装以及配置已经完成，如果还没有，请参考：<br><a href=\"https://floodlight.atlassian.net/wiki/display/floodlightcontroller/Installation+Guide\" target=\"_blank\" rel=\"noopener\">https://floodlight.atlassian.net/wiki/display/floodlightcontroller/Installation+Guide</a></p>\n<p>很简单的过程，大神就不用看了，主要是记下来方便自己以后用，也给需要的人参考，以下过程全部在eclipse中操作完成</p>\n<ol>\n<li><p>在floodlight项目的src/main/java包上右键新建Java类，填上包路径和Java类名以及继承的类（继承的类一般都包括”IOFMessageListener” 和 “IFloodlightModule”），然后就会自动生成一些需要重写的函数。</p>\n</li>\n<li><p>为了使我们新建的这个类监听到OpenFlow消息，需要在FloodlightProvider （一个IFloodlightProviderService类）注册我们的类。</p>\n</li>\n<li><p>我们需要修改getModuleDependencies()函数，用来告诉模块装载器我们依赖它。getModuleDependencies()函数是第一步添加父类后自动生成的函数。</p>\n</li>\n<li><p>接着编写init方法，init方法在控制器启动的时候就会调用，用来加载依赖模块和初始化数据结构。</p>\n</li>\n<li><p>然后实现基本的监听器，在startUP方法中注册PACKET_IN消息</p>\n</li>\n<li><p>为OFMessage监听器加上一个ID，这步在getName()中实现</p>\n</li>\n<li><p>关键的一步，定义接收到PACKET_IN消息后的行为，在receive()中实现，返回Command.CONTINUE以允许这个消息继续被其他的消息处理模块接收到。</p>\n</li>\n<li><p>我们还需要为之前我们创建的模块注册，这样floodlight启动的时候就可以加载我们的模块，在这一步，首先我们得告诉加载器我们的模块的存在，这可以在src/main/resources/META-INF/services/net.floodlightcontroller.core.module.IFloodlightModule文件里添加我们的模块的类</p>\n</li>\n<li><p>最后，我们还必须在floodlight模块配置文件中添加我们创建的模块，这个是在src/main/resources/floodlightdefault.properties文件里的floodlight.modules里添加我们的包和类的全路径。</p>\n</li>\n</ol>\n<hr>\n"},{"title":"Floodlight控制器的安装以及SDN环境的配置","date":"2015-12-25T14:28:51.000Z","copyright":true,"_content":"虽然网上有好多这种配置教材，但是在配置的过程中还是都会出各种问题，所以我想基于我自己的过程，记录下我的配置过程便于以后少走弯路，也给别人参考参考一下，下面的配置是我每步成功过后就记下来的，可能以后环境不是一模一样的还是会出各种小问题，这也难免。\n\n首先在win7的VMware上安装Ubuntu14.04，并且在Ubuntu里安装一些常用到的软件\n```\n$sudo apt-get install vim,git\n```\n然后进入正式安装floodlight的环节：\n### 安装java环境以及eclipse\n```\n$sudo apt-get install build-essentialdefault-jdk ant python-dev eclipse\n```\n### 下载floodlight源代码以及编译\n```\n$ git clone git://github.com/floodlight/floodlight.git \n$ cd floodlight \n$ ant; \n$ sudo mkdir /var/lib/floodlight   //同步数据的目录，编译完了floodlight会在这里自动生成一个SyncDB/文件夹，这行不是必需的\n$ sudo chmod  /var/lib/floodlight  777\n```\n### 安装mininet\n```\n$sudo apt-get install mininet\n```\n然后可以简单测试下：\n```\n$sudo mn\n```\n可以进入mininet的命令行就表示安装成功。\n### 运行floodlight：\n```\n$ cd floodlight\n$ java –jar target/floodlight.jar //控制台就打印出debug信息\n```\n### 运行mininet：\n```\n$sudo mn --controller=remote,ip=127.0.0.1,port=6653\n```\n这一步是把在mininet中建立的虚拟网络连接到floodlight控制器上。\n### 查看floodlight提供的UI界面\n在浏览器中输入：http://127.0.0.1:8080/ui/index.html就可以看到floodlight提供的Web UI界面。在webUI中可以查看交换机，主机，流表以及网络拓扑等信息。\n### 配置eclipse\n上面已经完成了基本的配置工作，但是为了方便后续的开发，我们还需要配置好eclipse，把floodlight的源代码导入到其中。方便以后给控制器添加应用模块以及查看控制器的各个模块的源代码。\n首先需要在floodlight的目录下执行下面这个命令：\n```\n$ant\n```\n然后打开eclipse，导入已存在的项目到工作空间，选择根目录为floodlight文件夹。\n\n然后配置eclipse，在eclipse中右键floodlight目录，run as里面的run configurations,新建一个Java Application，name用FloodlightLaunch，project填Floodlight，main填net.floodlightcontroller.core.Main，点应用就OK了。\n\n上面配置好了，就可以运行floodlight控制器了，点工具栏里的三角形按钮或者右键run as a JavaApplication,然后控制台就一直输出调试信息。后面就可以在eclipse中进行模块以及服务的开发。\n\n***","source":"_posts/Floodlight控制器的安装以及SDN环境的配置.md","raw":"---\ntitle: Floodlight控制器的安装以及SDN环境的配置\ndate: 2015-12-25 22:28:51\ntags: [SDN,Floodlight]\ncategories: \n- 原创\n- SDN\ncopyright: true\n---\n虽然网上有好多这种配置教材，但是在配置的过程中还是都会出各种问题，所以我想基于我自己的过程，记录下我的配置过程便于以后少走弯路，也给别人参考参考一下，下面的配置是我每步成功过后就记下来的，可能以后环境不是一模一样的还是会出各种小问题，这也难免。\n\n首先在win7的VMware上安装Ubuntu14.04，并且在Ubuntu里安装一些常用到的软件\n```\n$sudo apt-get install vim,git\n```\n然后进入正式安装floodlight的环节：\n### 安装java环境以及eclipse\n```\n$sudo apt-get install build-essentialdefault-jdk ant python-dev eclipse\n```\n### 下载floodlight源代码以及编译\n```\n$ git clone git://github.com/floodlight/floodlight.git \n$ cd floodlight \n$ ant; \n$ sudo mkdir /var/lib/floodlight   //同步数据的目录，编译完了floodlight会在这里自动生成一个SyncDB/文件夹，这行不是必需的\n$ sudo chmod  /var/lib/floodlight  777\n```\n### 安装mininet\n```\n$sudo apt-get install mininet\n```\n然后可以简单测试下：\n```\n$sudo mn\n```\n可以进入mininet的命令行就表示安装成功。\n### 运行floodlight：\n```\n$ cd floodlight\n$ java –jar target/floodlight.jar //控制台就打印出debug信息\n```\n### 运行mininet：\n```\n$sudo mn --controller=remote,ip=127.0.0.1,port=6653\n```\n这一步是把在mininet中建立的虚拟网络连接到floodlight控制器上。\n### 查看floodlight提供的UI界面\n在浏览器中输入：http://127.0.0.1:8080/ui/index.html就可以看到floodlight提供的Web UI界面。在webUI中可以查看交换机，主机，流表以及网络拓扑等信息。\n### 配置eclipse\n上面已经完成了基本的配置工作，但是为了方便后续的开发，我们还需要配置好eclipse，把floodlight的源代码导入到其中。方便以后给控制器添加应用模块以及查看控制器的各个模块的源代码。\n首先需要在floodlight的目录下执行下面这个命令：\n```\n$ant\n```\n然后打开eclipse，导入已存在的项目到工作空间，选择根目录为floodlight文件夹。\n\n然后配置eclipse，在eclipse中右键floodlight目录，run as里面的run configurations,新建一个Java Application，name用FloodlightLaunch，project填Floodlight，main填net.floodlightcontroller.core.Main，点应用就OK了。\n\n上面配置好了，就可以运行floodlight控制器了，点工具栏里的三角形按钮或者右键run as a JavaApplication,然后控制台就一直输出调试信息。后面就可以在eclipse中进行模块以及服务的开发。\n\n***","slug":"Floodlight控制器的安装以及SDN环境的配置","published":1,"updated":"2019-02-27T06:58:00.012Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkdg0007okq4yo8ctxu9","content":"<p>虽然网上有好多这种配置教材，但是在配置的过程中还是都会出各种问题，所以我想基于我自己的过程，记录下我的配置过程便于以后少走弯路，也给别人参考参考一下，下面的配置是我每步成功过后就记下来的，可能以后环境不是一模一样的还是会出各种小问题，这也难免。</p>\n<p>首先在win7的VMware上安装Ubuntu14.04，并且在Ubuntu里安装一些常用到的软件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo apt-get install vim,git</span><br></pre></td></tr></table></figure></p>\n<p>然后进入正式安装floodlight的环节：</p>\n<h3 id=\"安装java环境以及eclipse\"><a href=\"#安装java环境以及eclipse\" class=\"headerlink\" title=\"安装java环境以及eclipse\"></a>安装java环境以及eclipse</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo apt-get install build-essentialdefault-jdk ant python-dev eclipse</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载floodlight源代码以及编译\"><a href=\"#下载floodlight源代码以及编译\" class=\"headerlink\" title=\"下载floodlight源代码以及编译\"></a>下载floodlight源代码以及编译</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone git://github.com/floodlight/floodlight.git </span><br><span class=\"line\">$ cd floodlight </span><br><span class=\"line\">$ ant; </span><br><span class=\"line\">$ sudo mkdir /var/lib/floodlight   //同步数据的目录，编译完了floodlight会在这里自动生成一个SyncDB/文件夹，这行不是必需的</span><br><span class=\"line\">$ sudo chmod  /var/lib/floodlight  777</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装mininet\"><a href=\"#安装mininet\" class=\"headerlink\" title=\"安装mininet\"></a>安装mininet</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo apt-get install mininet</span><br></pre></td></tr></table></figure>\n<p>然后可以简单测试下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo mn</span><br></pre></td></tr></table></figure></p>\n<p>可以进入mininet的命令行就表示安装成功。</p>\n<h3 id=\"运行floodlight：\"><a href=\"#运行floodlight：\" class=\"headerlink\" title=\"运行floodlight：\"></a>运行floodlight：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd floodlight</span><br><span class=\"line\">$ java –jar target/floodlight.jar //控制台就打印出debug信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行mininet：\"><a href=\"#运行mininet：\" class=\"headerlink\" title=\"运行mininet：\"></a>运行mininet：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo mn --controller=remote,ip=127.0.0.1,port=6653</span><br></pre></td></tr></table></figure>\n<p>这一步是把在mininet中建立的虚拟网络连接到floodlight控制器上。</p>\n<h3 id=\"查看floodlight提供的UI界面\"><a href=\"#查看floodlight提供的UI界面\" class=\"headerlink\" title=\"查看floodlight提供的UI界面\"></a>查看floodlight提供的UI界面</h3><p>在浏览器中输入：<a href=\"http://127.0.0.1:8080/ui/index.html就可以看到floodlight提供的Web\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/ui/index.html就可以看到floodlight提供的Web</a> UI界面。在webUI中可以查看交换机，主机，流表以及网络拓扑等信息。</p>\n<h3 id=\"配置eclipse\"><a href=\"#配置eclipse\" class=\"headerlink\" title=\"配置eclipse\"></a>配置eclipse</h3><p>上面已经完成了基本的配置工作，但是为了方便后续的开发，我们还需要配置好eclipse，把floodlight的源代码导入到其中。方便以后给控制器添加应用模块以及查看控制器的各个模块的源代码。<br>首先需要在floodlight的目录下执行下面这个命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ant</span><br></pre></td></tr></table></figure></p>\n<p>然后打开eclipse，导入已存在的项目到工作空间，选择根目录为floodlight文件夹。</p>\n<p>然后配置eclipse，在eclipse中右键floodlight目录，run as里面的run configurations,新建一个Java Application，name用FloodlightLaunch，project填Floodlight，main填net.floodlightcontroller.core.Main，点应用就OK了。</p>\n<p>上面配置好了，就可以运行floodlight控制器了，点工具栏里的三角形按钮或者右键run as a JavaApplication,然后控制台就一直输出调试信息。后面就可以在eclipse中进行模块以及服务的开发。</p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>虽然网上有好多这种配置教材，但是在配置的过程中还是都会出各种问题，所以我想基于我自己的过程，记录下我的配置过程便于以后少走弯路，也给别人参考参考一下，下面的配置是我每步成功过后就记下来的，可能以后环境不是一模一样的还是会出各种小问题，这也难免。</p>\n<p>首先在win7的VMware上安装Ubuntu14.04，并且在Ubuntu里安装一些常用到的软件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo apt-get install vim,git</span><br></pre></td></tr></table></figure></p>\n<p>然后进入正式安装floodlight的环节：</p>\n<h3 id=\"安装java环境以及eclipse\"><a href=\"#安装java环境以及eclipse\" class=\"headerlink\" title=\"安装java环境以及eclipse\"></a>安装java环境以及eclipse</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo apt-get install build-essentialdefault-jdk ant python-dev eclipse</span><br></pre></td></tr></table></figure>\n<h3 id=\"下载floodlight源代码以及编译\"><a href=\"#下载floodlight源代码以及编译\" class=\"headerlink\" title=\"下载floodlight源代码以及编译\"></a>下载floodlight源代码以及编译</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone git://github.com/floodlight/floodlight.git </span><br><span class=\"line\">$ cd floodlight </span><br><span class=\"line\">$ ant; </span><br><span class=\"line\">$ sudo mkdir /var/lib/floodlight   //同步数据的目录，编译完了floodlight会在这里自动生成一个SyncDB/文件夹，这行不是必需的</span><br><span class=\"line\">$ sudo chmod  /var/lib/floodlight  777</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装mininet\"><a href=\"#安装mininet\" class=\"headerlink\" title=\"安装mininet\"></a>安装mininet</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo apt-get install mininet</span><br></pre></td></tr></table></figure>\n<p>然后可以简单测试下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo mn</span><br></pre></td></tr></table></figure></p>\n<p>可以进入mininet的命令行就表示安装成功。</p>\n<h3 id=\"运行floodlight：\"><a href=\"#运行floodlight：\" class=\"headerlink\" title=\"运行floodlight：\"></a>运行floodlight：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd floodlight</span><br><span class=\"line\">$ java –jar target/floodlight.jar //控制台就打印出debug信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行mininet：\"><a href=\"#运行mininet：\" class=\"headerlink\" title=\"运行mininet：\"></a>运行mininet：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$sudo mn --controller=remote,ip=127.0.0.1,port=6653</span><br></pre></td></tr></table></figure>\n<p>这一步是把在mininet中建立的虚拟网络连接到floodlight控制器上。</p>\n<h3 id=\"查看floodlight提供的UI界面\"><a href=\"#查看floodlight提供的UI界面\" class=\"headerlink\" title=\"查看floodlight提供的UI界面\"></a>查看floodlight提供的UI界面</h3><p>在浏览器中输入：<a href=\"http://127.0.0.1:8080/ui/index.html就可以看到floodlight提供的Web\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/ui/index.html就可以看到floodlight提供的Web</a> UI界面。在webUI中可以查看交换机，主机，流表以及网络拓扑等信息。</p>\n<h3 id=\"配置eclipse\"><a href=\"#配置eclipse\" class=\"headerlink\" title=\"配置eclipse\"></a>配置eclipse</h3><p>上面已经完成了基本的配置工作，但是为了方便后续的开发，我们还需要配置好eclipse，把floodlight的源代码导入到其中。方便以后给控制器添加应用模块以及查看控制器的各个模块的源代码。<br>首先需要在floodlight的目录下执行下面这个命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ant</span><br></pre></td></tr></table></figure></p>\n<p>然后打开eclipse，导入已存在的项目到工作空间，选择根目录为floodlight文件夹。</p>\n<p>然后配置eclipse，在eclipse中右键floodlight目录，run as里面的run configurations,新建一个Java Application，name用FloodlightLaunch，project填Floodlight，main填net.floodlightcontroller.core.Main，点应用就OK了。</p>\n<p>上面配置好了，就可以运行floodlight控制器了，点工具栏里的三角形按钮或者右键run as a JavaApplication,然后控制台就一直输出调试信息。后面就可以在eclipse中进行模块以及服务的开发。</p>\n<hr>\n"},{"title":"Vmware+Ubuntu14.04+mininet中的host如何访问外网","date":"2016-01-17T09:32:21.000Z","copyright":true,"_content":"最近需要mininet虚拟出的网络拓扑中的host访问外网，搞了几天，总是出些小问题，今天终于可以不出问题的搞定了。在这里总结一下，以防以后再出问题。\n\n`环境：Win7，Vmware workstation 10.0 ，Ubuntu 14.04，mininet 2.2.0`\n\n首先把宿主机win7中的VMnet8设置为自动获取IP地址，然后配置Vmware的Ubuntu，配置两块网卡，都是NAT模式。如下图：\n<center>![图1](1.png)</center>\n点击确定后，点击虚拟网络编辑器，配置VMnet8的子网和掩码以及网关：\n<center>![图2](2.png)</center>\n我这里设置子网为10.0.0.0，子网掩码为255.255.255.0，当然也可以设置为其他的，因为是NAT模式，所以不影响其连外网。这里主要是方便后面设置主机的IP。\n<center>![图3](3.png)</center>\n网关设置为10.0.0.254。\n<center>![图4](4.png)</center>\n这里的DHCP地址范围设置随便取一个合适的范围。\n \nOK，上面的配置已经为Ubuntu配置好了网络，可以启动Ubuntu了，查看网卡信息：\n<center>![图5](5.png)</center>\n这个时候，ping一下，则可以ping通，而且只有通过eth0来ping通，eth1 ping不通。\n\n分别用：`ping -I eth0 baidu.com` 和 `ping –I eth1 baidu.com`测试。\n\n为了后面的需要，我们把eth1的IP设置为：0.0.0.0，这样这个闲置的网卡资源就可以被用来桥接到mininet网络中的交换机上，这个后面会介绍怎样桥接。\n\n利用命令：`sudo ifconfig eth1 0.0.0.0`，查看IP地址时eth1已经看不到IP地址了。\n<center>![图6](6.png)</center>\n好了，后面开始重点部分了，先在本地运行floodlight控制器，ip为127.0.0.1，端口为6653。然后编写python脚本创建mininet网络，如下：\n``` python\n#!/usr/bin/python\nimport re\nimport sys\nfrom mininet.cli import CLI\nfrom mininet.log import setLogLevel, info, error\nfrom mininet.net import Mininet\nfrom mininet.link import Intf\nfrom mininet.topolib import TreeTopo\nfrom mininet.util import quietRun\nfrom mininet.node import OVSSwitch, OVSController, Controller, RemoteController\nfrom mininet.topo import Topo\n \nclass MyTopo( Topo ):\n#    \"this topo is used for Scheme_1\"\n    \n    def __init__( self ):\n        \"Create custom topo.\"\n \n        # Initialize topology\n        Topo.__init__( self )\n \n        # Add hosts \n        h1 = self.addHost( 'h1' , ip=\"10.0.0.1/24\", mac=\"00:00:00:00:00:01\", defaultRoute=\"via 10.0.0.254\")\n        h2 = self.addHost( 'h2' , ip=\"10.0.0.2/24\", mac=\"00:00:00:00:00:02\", defaultRoute=\"via 10.0.0.254\")\n        h3 = self.addHost( 'h3' , ip=\"10.0.0.3/24\", mac=\"00:00:00:00:00:03\", defaultRoute=\"via 10.0.0.254\")\n        h4 = self.addHost( 'h4' , ip=\"10.0.0.4/24\", mac=\"00:00:00:00:00:04\", defaultRoute=\"via 10.0.0.254\")\n        \n        # Add switches\n        s1 = self.addSwitch( 's1' )\n        s2 = self.addSwitch( 's2' )\n        s3 = self.addSwitch( 's3' )\n \n        # Add links\n        self.addLink( s1, s2 )\n        self.addLink( s1, s3 )\n        self.addLink( s2, h1 )\n        self.addLink( s2, h2 )\n        self.addLink( s3, h3 )\n        self.addLink( s3, h4 )\n//检查eth1或者其他指定的网卡资源是不是已经被占用\ndef checkIntf( intf ):\n    \"Make sure intf exists and is not configured.\"\n    if ( ' %s:' % intf ) not in quietRun( 'ip link show' ):\n        error( 'Error:', intf, 'does not exist!\\n' )\n        exit( 1 )\n    ips = re.findall( r'\\d+\\.\\d+\\.\\d+\\.\\d+', quietRun( 'ifconfig ' + intf ) )\n    if ips:\n        error( 'Error:', intf, 'has an IP address,'\n               'and is probably in use!\\n' )\n        exit( 1 )\n \nif __name__ == '__main__':\n    setLogLevel( 'info' )\n \n    # try to get hw intf from the command line; by default, use eth1\n    intfName = sys.argv[ 1 ] if len( sys.argv ) > 1 else 'eth1'\n    info( '*** Connecting to hw intf: %s' % intfName )\n \n    info( '*** Checking', intfName, '\\n' )\n    checkIntf( intfName )\n \n    info( '*** Creating network\\n' )\n    net = Mininet( topo=MyTopo(),controller=None) //关键函数，创建mininet网络，指定拓扑和控制器。这里的控制器在后面添加进去\n    switch = net.switches[ 0 ] //取第一个交换机与eth1桥接\n    info( '*** Adding hardware interface', intfName, 'to switch', switch.name, '\\n' )\n    _intf = Intf( intfName, node=switch ) //最关键的函数，用作把一个网卡与一个交换机桥接\n \n    info( '*** Note: you may need to reconfigure the interfaces for '\n          'the Mininet hosts:\\n', net.hosts, '\\n' )\n    c0 = RemoteController( 'c0', ip='127.0.0.1', port=6653 )\n    net.addController(c0)\n    net.start()\n    CLI( net )\n    net.stop()\n```\n上面的脚本运行后，在floodlight web UI中可以看到创建了如下拓扑：\n<center>![图7](7.png)</center>\n用上面的脚本设置了虚拟网络中的host的IP地址，MAC地址以及默认网关，然后把 Ubuntu的eth1网卡桥接到s1上，这里实现这个桥接功能主要是由Intf函数起作用，可以参看https://github.com/mininet/mininet/blob/master/examples/hwintf.py：\n\n使用 ```sudo python mytopo.py``` 运行脚本，出现mininet命令行。在命令行中使用xterm h1打开h1的独立窗口，再ping一下baidu.com。\n<center>![图8](8.png)</center>\n到这里就完成了host访问外网的任务了，而且在Ubuntu和win7中也都可以和host通信（ping通）。\n最后我根据自己的理解画了个总体的图，仅作为参考，不对的地方请留言指出，谢谢。。。\n<center>![图9](9.png)</center>\n\n----\n参考链接：\n1. http://techandtrains.com/2013/11/24/mininet-host-talking-to-internet/\n2. http://www.muzixing.com/pages/2013/12/06/yuan-chuang-mininetda-jian-zi-ding-yi-wang-luo-tuo-bu-by-muzi.html","source":"_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网.md","raw":"---\ntitle: Vmware+Ubuntu14.04+mininet中的host如何访问外网\ndate: 2016-01-17 17:32:21\ntags: [SDN, Mininet, Linux]\ncategories:\n- 原创\n- SDN\ncopyright: true\n---\n最近需要mininet虚拟出的网络拓扑中的host访问外网，搞了几天，总是出些小问题，今天终于可以不出问题的搞定了。在这里总结一下，以防以后再出问题。\n\n`环境：Win7，Vmware workstation 10.0 ，Ubuntu 14.04，mininet 2.2.0`\n\n首先把宿主机win7中的VMnet8设置为自动获取IP地址，然后配置Vmware的Ubuntu，配置两块网卡，都是NAT模式。如下图：\n<center>![图1](1.png)</center>\n点击确定后，点击虚拟网络编辑器，配置VMnet8的子网和掩码以及网关：\n<center>![图2](2.png)</center>\n我这里设置子网为10.0.0.0，子网掩码为255.255.255.0，当然也可以设置为其他的，因为是NAT模式，所以不影响其连外网。这里主要是方便后面设置主机的IP。\n<center>![图3](3.png)</center>\n网关设置为10.0.0.254。\n<center>![图4](4.png)</center>\n这里的DHCP地址范围设置随便取一个合适的范围。\n \nOK，上面的配置已经为Ubuntu配置好了网络，可以启动Ubuntu了，查看网卡信息：\n<center>![图5](5.png)</center>\n这个时候，ping一下，则可以ping通，而且只有通过eth0来ping通，eth1 ping不通。\n\n分别用：`ping -I eth0 baidu.com` 和 `ping –I eth1 baidu.com`测试。\n\n为了后面的需要，我们把eth1的IP设置为：0.0.0.0，这样这个闲置的网卡资源就可以被用来桥接到mininet网络中的交换机上，这个后面会介绍怎样桥接。\n\n利用命令：`sudo ifconfig eth1 0.0.0.0`，查看IP地址时eth1已经看不到IP地址了。\n<center>![图6](6.png)</center>\n好了，后面开始重点部分了，先在本地运行floodlight控制器，ip为127.0.0.1，端口为6653。然后编写python脚本创建mininet网络，如下：\n``` python\n#!/usr/bin/python\nimport re\nimport sys\nfrom mininet.cli import CLI\nfrom mininet.log import setLogLevel, info, error\nfrom mininet.net import Mininet\nfrom mininet.link import Intf\nfrom mininet.topolib import TreeTopo\nfrom mininet.util import quietRun\nfrom mininet.node import OVSSwitch, OVSController, Controller, RemoteController\nfrom mininet.topo import Topo\n \nclass MyTopo( Topo ):\n#    \"this topo is used for Scheme_1\"\n    \n    def __init__( self ):\n        \"Create custom topo.\"\n \n        # Initialize topology\n        Topo.__init__( self )\n \n        # Add hosts \n        h1 = self.addHost( 'h1' , ip=\"10.0.0.1/24\", mac=\"00:00:00:00:00:01\", defaultRoute=\"via 10.0.0.254\")\n        h2 = self.addHost( 'h2' , ip=\"10.0.0.2/24\", mac=\"00:00:00:00:00:02\", defaultRoute=\"via 10.0.0.254\")\n        h3 = self.addHost( 'h3' , ip=\"10.0.0.3/24\", mac=\"00:00:00:00:00:03\", defaultRoute=\"via 10.0.0.254\")\n        h4 = self.addHost( 'h4' , ip=\"10.0.0.4/24\", mac=\"00:00:00:00:00:04\", defaultRoute=\"via 10.0.0.254\")\n        \n        # Add switches\n        s1 = self.addSwitch( 's1' )\n        s2 = self.addSwitch( 's2' )\n        s3 = self.addSwitch( 's3' )\n \n        # Add links\n        self.addLink( s1, s2 )\n        self.addLink( s1, s3 )\n        self.addLink( s2, h1 )\n        self.addLink( s2, h2 )\n        self.addLink( s3, h3 )\n        self.addLink( s3, h4 )\n//检查eth1或者其他指定的网卡资源是不是已经被占用\ndef checkIntf( intf ):\n    \"Make sure intf exists and is not configured.\"\n    if ( ' %s:' % intf ) not in quietRun( 'ip link show' ):\n        error( 'Error:', intf, 'does not exist!\\n' )\n        exit( 1 )\n    ips = re.findall( r'\\d+\\.\\d+\\.\\d+\\.\\d+', quietRun( 'ifconfig ' + intf ) )\n    if ips:\n        error( 'Error:', intf, 'has an IP address,'\n               'and is probably in use!\\n' )\n        exit( 1 )\n \nif __name__ == '__main__':\n    setLogLevel( 'info' )\n \n    # try to get hw intf from the command line; by default, use eth1\n    intfName = sys.argv[ 1 ] if len( sys.argv ) > 1 else 'eth1'\n    info( '*** Connecting to hw intf: %s' % intfName )\n \n    info( '*** Checking', intfName, '\\n' )\n    checkIntf( intfName )\n \n    info( '*** Creating network\\n' )\n    net = Mininet( topo=MyTopo(),controller=None) //关键函数，创建mininet网络，指定拓扑和控制器。这里的控制器在后面添加进去\n    switch = net.switches[ 0 ] //取第一个交换机与eth1桥接\n    info( '*** Adding hardware interface', intfName, 'to switch', switch.name, '\\n' )\n    _intf = Intf( intfName, node=switch ) //最关键的函数，用作把一个网卡与一个交换机桥接\n \n    info( '*** Note: you may need to reconfigure the interfaces for '\n          'the Mininet hosts:\\n', net.hosts, '\\n' )\n    c0 = RemoteController( 'c0', ip='127.0.0.1', port=6653 )\n    net.addController(c0)\n    net.start()\n    CLI( net )\n    net.stop()\n```\n上面的脚本运行后，在floodlight web UI中可以看到创建了如下拓扑：\n<center>![图7](7.png)</center>\n用上面的脚本设置了虚拟网络中的host的IP地址，MAC地址以及默认网关，然后把 Ubuntu的eth1网卡桥接到s1上，这里实现这个桥接功能主要是由Intf函数起作用，可以参看https://github.com/mininet/mininet/blob/master/examples/hwintf.py：\n\n使用 ```sudo python mytopo.py``` 运行脚本，出现mininet命令行。在命令行中使用xterm h1打开h1的独立窗口，再ping一下baidu.com。\n<center>![图8](8.png)</center>\n到这里就完成了host访问外网的任务了，而且在Ubuntu和win7中也都可以和host通信（ping通）。\n最后我根据自己的理解画了个总体的图，仅作为参考，不对的地方请留言指出，谢谢。。。\n<center>![图9](9.png)</center>\n\n----\n参考链接：\n1. http://techandtrains.com/2013/11/24/mininet-host-talking-to-internet/\n2. http://www.muzixing.com/pages/2013/12/06/yuan-chuang-mininetda-jian-zi-ding-yi-wang-luo-tuo-bu-by-muzi.html","slug":"Vmware-Ubuntu14-04-mininet中的host如何访问外网","published":1,"updated":"2019-02-28T23:51:17.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkdi0009okq4r24615rt","content":"<p>最近需要mininet虚拟出的网络拓扑中的host访问外网，搞了几天，总是出些小问题，今天终于可以不出问题的搞定了。在这里总结一下，以防以后再出问题。</p>\n<p><code>环境：Win7，Vmware workstation 10.0 ，Ubuntu 14.04，mininet 2.2.0</code></p>\n<p>首先把宿主机win7中的VMnet8设置为自动获取IP地址，然后配置Vmware的Ubuntu，配置两块网卡，都是NAT模式。如下图：</p>\n<center><img src=\"1.png\" alt=\"图1\"></center><br>点击确定后，点击虚拟网络编辑器，配置VMnet8的子网和掩码以及网关：<br><center><img src=\"2.png\" alt=\"图2\"></center><br>我这里设置子网为10.0.0.0，子网掩码为255.255.255.0，当然也可以设置为其他的，因为是NAT模式，所以不影响其连外网。这里主要是方便后面设置主机的IP。<br><center><img src=\"3.png\" alt=\"图3\"></center><br>网关设置为10.0.0.254。<br><center><img src=\"4.png\" alt=\"图4\"></center><br>这里的DHCP地址范围设置随便取一个合适的范围。<br><br>OK，上面的配置已经为Ubuntu配置好了网络，可以启动Ubuntu了，查看网卡信息：<br><center><img src=\"5.png\" alt=\"图5\"></center><br>这个时候，ping一下，则可以ping通，而且只有通过eth0来ping通，eth1 ping不通。<br><br>分别用：<code>ping -I eth0 baidu.com</code> 和 <code>ping –I eth1 baidu.com</code>测试。<br><br>为了后面的需要，我们把eth1的IP设置为：0.0.0.0，这样这个闲置的网卡资源就可以被用来桥接到mininet网络中的交换机上，这个后面会介绍怎样桥接。<br><br>利用命令：<code>sudo ifconfig eth1 0.0.0.0</code>，查看IP地址时eth1已经看不到IP地址了。<br><center><img src=\"6.png\" alt=\"图6\"></center><br>好了，后面开始重点部分了，先在本地运行floodlight控制器，ip为127.0.0.1，端口为6653。然后编写python脚本创建mininet网络，如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.cli <span class=\"keyword\">import</span> CLI</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.log <span class=\"keyword\">import</span> setLogLevel, info, error</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.net <span class=\"keyword\">import</span> Mininet</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.link <span class=\"keyword\">import</span> Intf</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.topolib <span class=\"keyword\">import</span> TreeTopo</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.util <span class=\"keyword\">import</span> quietRun</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.node <span class=\"keyword\">import</span> OVSSwitch, OVSController, Controller, RemoteController</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.topo <span class=\"keyword\">import</span> Topo</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTopo</span><span class=\"params\">( Topo )</span>:</span></span><br><span class=\"line\"><span class=\"comment\">#    \"this topo is used for Scheme_1\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">( self )</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"Create custom topo.\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Initialize topology</span></span><br><span class=\"line\">        Topo.__init__( self )</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Add hosts </span></span><br><span class=\"line\">        h1 = self.addHost( <span class=\"string\">'h1'</span> , ip=<span class=\"string\">\"10.0.0.1/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:01\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        h2 = self.addHost( <span class=\"string\">'h2'</span> , ip=<span class=\"string\">\"10.0.0.2/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:02\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        h3 = self.addHost( <span class=\"string\">'h3'</span> , ip=<span class=\"string\">\"10.0.0.3/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:03\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        h4 = self.addHost( <span class=\"string\">'h4'</span> , ip=<span class=\"string\">\"10.0.0.4/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:04\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Add switches</span></span><br><span class=\"line\">        s1 = self.addSwitch( <span class=\"string\">'s1'</span> )</span><br><span class=\"line\">        s2 = self.addSwitch( <span class=\"string\">'s2'</span> )</span><br><span class=\"line\">        s3 = self.addSwitch( <span class=\"string\">'s3'</span> )</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Add links</span></span><br><span class=\"line\">        self.addLink( s1, s2 )</span><br><span class=\"line\">        self.addLink( s1, s3 )</span><br><span class=\"line\">        self.addLink( s2, h1 )</span><br><span class=\"line\">        self.addLink( s2, h2 )</span><br><span class=\"line\">        self.addLink( s3, h3 )</span><br><span class=\"line\">        self.addLink( s3, h4 )</span><br><span class=\"line\">//检查eth1或者其他指定的网卡资源是不是已经被占用</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkIntf</span><span class=\"params\">( intf )</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"Make sure intf exists and is not configured.\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"string\">' %s:'</span> % intf ) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> quietRun( <span class=\"string\">'ip link show'</span> ):</span><br><span class=\"line\">        error( <span class=\"string\">'Error:'</span>, intf, <span class=\"string\">'does not exist!\\n'</span> )</span><br><span class=\"line\">        exit( <span class=\"number\">1</span> )</span><br><span class=\"line\">    ips = re.findall( <span class=\"string\">r'\\d+\\.\\d+\\.\\d+\\.\\d+'</span>, quietRun( <span class=\"string\">'ifconfig '</span> + intf ) )</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ips:</span><br><span class=\"line\">        error( <span class=\"string\">'Error:'</span>, intf, <span class=\"string\">'has an IP address,'</span></span><br><span class=\"line\">               <span class=\"string\">'and is probably in use!\\n'</span> )</span><br><span class=\"line\">        exit( <span class=\"number\">1</span> )</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    setLogLevel( <span class=\"string\">'info'</span> )</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># try to get hw intf from the command line; by default, use eth1</span></span><br><span class=\"line\">    intfName = sys.argv[ <span class=\"number\">1</span> ] <span class=\"keyword\">if</span> len( sys.argv ) &gt; <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"string\">'eth1'</span></span><br><span class=\"line\">    info( <span class=\"string\">'*** Connecting to hw intf: %s'</span> % intfName )</span><br><span class=\"line\"> </span><br><span class=\"line\">    info( <span class=\"string\">'*** Checking'</span>, intfName, <span class=\"string\">'\\n'</span> )</span><br><span class=\"line\">    checkIntf( intfName )</span><br><span class=\"line\"> </span><br><span class=\"line\">    info( <span class=\"string\">'*** Creating network\\n'</span> )</span><br><span class=\"line\">    net = Mininet( topo=MyTopo(),controller=<span class=\"keyword\">None</span>) //关键函数，创建mininet网络，指定拓扑和控制器。这里的控制器在后面添加进去</span><br><span class=\"line\">    switch = net.switches[ <span class=\"number\">0</span> ] //取第一个交换机与eth1桥接</span><br><span class=\"line\">    info( <span class=\"string\">'*** Adding hardware interface'</span>, intfName, <span class=\"string\">'to switch'</span>, switch.name, <span class=\"string\">'\\n'</span> )</span><br><span class=\"line\">    _intf = Intf( intfName, node=switch ) //最关键的函数，用作把一个网卡与一个交换机桥接</span><br><span class=\"line\"> </span><br><span class=\"line\">    info( <span class=\"string\">'*** Note: you may need to reconfigure the interfaces for '</span></span><br><span class=\"line\">          <span class=\"string\">'the Mininet hosts:\\n'</span>, net.hosts, <span class=\"string\">'\\n'</span> )</span><br><span class=\"line\">    c0 = RemoteController( <span class=\"string\">'c0'</span>, ip=<span class=\"string\">'127.0.0.1'</span>, port=<span class=\"number\">6653</span> )</span><br><span class=\"line\">    net.addController(c0)</span><br><span class=\"line\">    net.start()</span><br><span class=\"line\">    CLI( net )</span><br><span class=\"line\">    net.stop()</span><br></pre></td></tr></table></figure><br><br>上面的脚本运行后，在floodlight web UI中可以看到创建了如下拓扑：<br><center><img src=\"7.png\" alt=\"图7\"></center><br>用上面的脚本设置了虚拟网络中的host的IP地址，MAC地址以及默认网关，然后把 Ubuntu的eth1网卡桥接到s1上，这里实现这个桥接功能主要是由Intf函数起作用，可以参看<a href=\"https://github.com/mininet/mininet/blob/master/examples/hwintf.py：\" target=\"_blank\" rel=\"noopener\">https://github.com/mininet/mininet/blob/master/examples/hwintf.py：</a><br><br>使用 <code>sudo python mytopo.py</code> 运行脚本，出现mininet命令行。在命令行中使用xterm h1打开h1的独立窗口，再ping一下baidu.com。<br><center><img src=\"8.png\" alt=\"图8\"></center><br>到这里就完成了host访问外网的任务了，而且在Ubuntu和win7中也都可以和host通信（ping通）。<br>最后我根据自己的理解画了个总体的图，仅作为参考，不对的地方请留言指出，谢谢。。。<br><center><img src=\"9.png\" alt=\"图9\"></center>\n\n<hr>\n<p>参考链接：</p>\n<ol>\n<li><a href=\"http://techandtrains.com/2013/11/24/mininet-host-talking-to-internet/\" target=\"_blank\" rel=\"noopener\">http://techandtrains.com/2013/11/24/mininet-host-talking-to-internet/</a></li>\n<li><a href=\"http://www.muzixing.com/pages/2013/12/06/yuan-chuang-mininetda-jian-zi-ding-yi-wang-luo-tuo-bu-by-muzi.html\" target=\"_blank\" rel=\"noopener\">http://www.muzixing.com/pages/2013/12/06/yuan-chuang-mininetda-jian-zi-ding-yi-wang-luo-tuo-bu-by-muzi.html</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>最近需要mininet虚拟出的网络拓扑中的host访问外网，搞了几天，总是出些小问题，今天终于可以不出问题的搞定了。在这里总结一下，以防以后再出问题。</p>\n<p><code>环境：Win7，Vmware workstation 10.0 ，Ubuntu 14.04，mininet 2.2.0</code></p>\n<p>首先把宿主机win7中的VMnet8设置为自动获取IP地址，然后配置Vmware的Ubuntu，配置两块网卡，都是NAT模式。如下图：</p>\n<center><img src=\"1.png\" alt=\"图1\"></center><br>点击确定后，点击虚拟网络编辑器，配置VMnet8的子网和掩码以及网关：<br><center><img src=\"2.png\" alt=\"图2\"></center><br>我这里设置子网为10.0.0.0，子网掩码为255.255.255.0，当然也可以设置为其他的，因为是NAT模式，所以不影响其连外网。这里主要是方便后面设置主机的IP。<br><center><img src=\"3.png\" alt=\"图3\"></center><br>网关设置为10.0.0.254。<br><center><img src=\"4.png\" alt=\"图4\"></center><br>这里的DHCP地址范围设置随便取一个合适的范围。<br><br>OK，上面的配置已经为Ubuntu配置好了网络，可以启动Ubuntu了，查看网卡信息：<br><center><img src=\"5.png\" alt=\"图5\"></center><br>这个时候，ping一下，则可以ping通，而且只有通过eth0来ping通，eth1 ping不通。<br><br>分别用：<code>ping -I eth0 baidu.com</code> 和 <code>ping –I eth1 baidu.com</code>测试。<br><br>为了后面的需要，我们把eth1的IP设置为：0.0.0.0，这样这个闲置的网卡资源就可以被用来桥接到mininet网络中的交换机上，这个后面会介绍怎样桥接。<br><br>利用命令：<code>sudo ifconfig eth1 0.0.0.0</code>，查看IP地址时eth1已经看不到IP地址了。<br><center><img src=\"6.png\" alt=\"图6\"></center><br>好了，后面开始重点部分了，先在本地运行floodlight控制器，ip为127.0.0.1，端口为6653。然后编写python脚本创建mininet网络，如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.cli <span class=\"keyword\">import</span> CLI</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.log <span class=\"keyword\">import</span> setLogLevel, info, error</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.net <span class=\"keyword\">import</span> Mininet</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.link <span class=\"keyword\">import</span> Intf</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.topolib <span class=\"keyword\">import</span> TreeTopo</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.util <span class=\"keyword\">import</span> quietRun</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.node <span class=\"keyword\">import</span> OVSSwitch, OVSController, Controller, RemoteController</span><br><span class=\"line\"><span class=\"keyword\">from</span> mininet.topo <span class=\"keyword\">import</span> Topo</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTopo</span><span class=\"params\">( Topo )</span>:</span></span><br><span class=\"line\"><span class=\"comment\">#    \"this topo is used for Scheme_1\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">( self )</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"Create custom topo.\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Initialize topology</span></span><br><span class=\"line\">        Topo.__init__( self )</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Add hosts </span></span><br><span class=\"line\">        h1 = self.addHost( <span class=\"string\">'h1'</span> , ip=<span class=\"string\">\"10.0.0.1/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:01\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        h2 = self.addHost( <span class=\"string\">'h2'</span> , ip=<span class=\"string\">\"10.0.0.2/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:02\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        h3 = self.addHost( <span class=\"string\">'h3'</span> , ip=<span class=\"string\">\"10.0.0.3/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:03\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        h4 = self.addHost( <span class=\"string\">'h4'</span> , ip=<span class=\"string\">\"10.0.0.4/24\"</span>, mac=<span class=\"string\">\"00:00:00:00:00:04\"</span>, defaultRoute=<span class=\"string\">\"via 10.0.0.254\"</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\"># Add switches</span></span><br><span class=\"line\">        s1 = self.addSwitch( <span class=\"string\">'s1'</span> )</span><br><span class=\"line\">        s2 = self.addSwitch( <span class=\"string\">'s2'</span> )</span><br><span class=\"line\">        s3 = self.addSwitch( <span class=\"string\">'s3'</span> )</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\"># Add links</span></span><br><span class=\"line\">        self.addLink( s1, s2 )</span><br><span class=\"line\">        self.addLink( s1, s3 )</span><br><span class=\"line\">        self.addLink( s2, h1 )</span><br><span class=\"line\">        self.addLink( s2, h2 )</span><br><span class=\"line\">        self.addLink( s3, h3 )</span><br><span class=\"line\">        self.addLink( s3, h4 )</span><br><span class=\"line\">//检查eth1或者其他指定的网卡资源是不是已经被占用</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkIntf</span><span class=\"params\">( intf )</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"Make sure intf exists and is not configured.\"</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"string\">' %s:'</span> % intf ) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> quietRun( <span class=\"string\">'ip link show'</span> ):</span><br><span class=\"line\">        error( <span class=\"string\">'Error:'</span>, intf, <span class=\"string\">'does not exist!\\n'</span> )</span><br><span class=\"line\">        exit( <span class=\"number\">1</span> )</span><br><span class=\"line\">    ips = re.findall( <span class=\"string\">r'\\d+\\.\\d+\\.\\d+\\.\\d+'</span>, quietRun( <span class=\"string\">'ifconfig '</span> + intf ) )</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ips:</span><br><span class=\"line\">        error( <span class=\"string\">'Error:'</span>, intf, <span class=\"string\">'has an IP address,'</span></span><br><span class=\"line\">               <span class=\"string\">'and is probably in use!\\n'</span> )</span><br><span class=\"line\">        exit( <span class=\"number\">1</span> )</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    setLogLevel( <span class=\"string\">'info'</span> )</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># try to get hw intf from the command line; by default, use eth1</span></span><br><span class=\"line\">    intfName = sys.argv[ <span class=\"number\">1</span> ] <span class=\"keyword\">if</span> len( sys.argv ) &gt; <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"string\">'eth1'</span></span><br><span class=\"line\">    info( <span class=\"string\">'*** Connecting to hw intf: %s'</span> % intfName )</span><br><span class=\"line\"> </span><br><span class=\"line\">    info( <span class=\"string\">'*** Checking'</span>, intfName, <span class=\"string\">'\\n'</span> )</span><br><span class=\"line\">    checkIntf( intfName )</span><br><span class=\"line\"> </span><br><span class=\"line\">    info( <span class=\"string\">'*** Creating network\\n'</span> )</span><br><span class=\"line\">    net = Mininet( topo=MyTopo(),controller=<span class=\"keyword\">None</span>) //关键函数，创建mininet网络，指定拓扑和控制器。这里的控制器在后面添加进去</span><br><span class=\"line\">    switch = net.switches[ <span class=\"number\">0</span> ] //取第一个交换机与eth1桥接</span><br><span class=\"line\">    info( <span class=\"string\">'*** Adding hardware interface'</span>, intfName, <span class=\"string\">'to switch'</span>, switch.name, <span class=\"string\">'\\n'</span> )</span><br><span class=\"line\">    _intf = Intf( intfName, node=switch ) //最关键的函数，用作把一个网卡与一个交换机桥接</span><br><span class=\"line\"> </span><br><span class=\"line\">    info( <span class=\"string\">'*** Note: you may need to reconfigure the interfaces for '</span></span><br><span class=\"line\">          <span class=\"string\">'the Mininet hosts:\\n'</span>, net.hosts, <span class=\"string\">'\\n'</span> )</span><br><span class=\"line\">    c0 = RemoteController( <span class=\"string\">'c0'</span>, ip=<span class=\"string\">'127.0.0.1'</span>, port=<span class=\"number\">6653</span> )</span><br><span class=\"line\">    net.addController(c0)</span><br><span class=\"line\">    net.start()</span><br><span class=\"line\">    CLI( net )</span><br><span class=\"line\">    net.stop()</span><br></pre></td></tr></table></figure><br><br>上面的脚本运行后，在floodlight web UI中可以看到创建了如下拓扑：<br><center><img src=\"7.png\" alt=\"图7\"></center><br>用上面的脚本设置了虚拟网络中的host的IP地址，MAC地址以及默认网关，然后把 Ubuntu的eth1网卡桥接到s1上，这里实现这个桥接功能主要是由Intf函数起作用，可以参看<a href=\"https://github.com/mininet/mininet/blob/master/examples/hwintf.py：\" target=\"_blank\" rel=\"noopener\">https://github.com/mininet/mininet/blob/master/examples/hwintf.py：</a><br><br>使用 <code>sudo python mytopo.py</code> 运行脚本，出现mininet命令行。在命令行中使用xterm h1打开h1的独立窗口，再ping一下baidu.com。<br><center><img src=\"8.png\" alt=\"图8\"></center><br>到这里就完成了host访问外网的任务了，而且在Ubuntu和win7中也都可以和host通信（ping通）。<br>最后我根据自己的理解画了个总体的图，仅作为参考，不对的地方请留言指出，谢谢。。。<br><center><img src=\"9.png\" alt=\"图9\"></center>\n\n<hr>\n<p>参考链接：</p>\n<ol>\n<li><a href=\"http://techandtrains.com/2013/11/24/mininet-host-talking-to-internet/\" target=\"_blank\" rel=\"noopener\">http://techandtrains.com/2013/11/24/mininet-host-talking-to-internet/</a></li>\n<li><a href=\"http://www.muzixing.com/pages/2013/12/06/yuan-chuang-mininetda-jian-zi-ding-yi-wang-luo-tuo-bu-by-muzi.html\" target=\"_blank\" rel=\"noopener\">http://www.muzixing.com/pages/2013/12/06/yuan-chuang-mininetda-jian-zi-ding-yi-wang-luo-tuo-bu-by-muzi.html</a></li>\n</ol>\n"},{"title":"django 外键model的互相读取","date":"2015-12-15T02:07:27.000Z","copyright":true,"_content":"先设定一个关系模型如下:\n``` python\nfrom django.db import models\nclass Blog(models.Model):\n   name = models.CharField(max_length=100)\n   tagline = models.TextField()\n   def __str__(self):            \n       return self.name\n \nclass Author(models.Model):\n   name = models.CharField(max_length=50)\n   email = models.EmailField()\n   def __str__(self):           \n       return self.name\n \nclass Entry(models.Model):\n   blog = models.ForeignKey(Blog)\n   headline = models.CharField(max_length=255)\n   body_text = models.TextField()\n   authors = models.ManyToManyField(Author)\n   def __str__(self):            \n      return self.headline\n\n```\n上面的数据关系很明晰,Entry中有Blog和Author的外键,如果要在Entry中读取blog和author的数据很容易:\n``` python\nentry = Entry.objects.all()\nfor e in entry:\n    blog = e.blog\n    author = e.authors\n```\n要在Blog和Author中读取Entry也可以：\n``` python\nblog = Blog.objects.all()\nentry = blog.entry_set.all()\n \nauthor = Author.objects.all()\nentry = author.entry_set.all()\n```\n\n下面通过entry使blog和author互相读取，比如要知道一个blog的Author只需如下:\n``` python\nblogs = Blog.objects.all()\nfor blog in blogs:\n    if blog.name== “我们想要查询的博客的name”\n        author = blog. entry_set.authors\n```\n要查询一个author的所有blog如下：\n``` python\nauthors = Author.objects.all()\nblogs = []\n \nfor author in authors:\n    if author.name== “我们想要查询的Author的name”\n        for entry in author.entry_set.all():\n            blogs.append(entry. blog)\n```\n-----","source":"_posts/django-外键model的互相读取.md","raw":"---\ntitle: django 外键model的互相读取\ndate: 2015-12-15 10:07:27\ntags: [Python, Django]\ncategories:\n- 原创\n- Python\ncopyright: true\n---\n先设定一个关系模型如下:\n``` python\nfrom django.db import models\nclass Blog(models.Model):\n   name = models.CharField(max_length=100)\n   tagline = models.TextField()\n   def __str__(self):            \n       return self.name\n \nclass Author(models.Model):\n   name = models.CharField(max_length=50)\n   email = models.EmailField()\n   def __str__(self):           \n       return self.name\n \nclass Entry(models.Model):\n   blog = models.ForeignKey(Blog)\n   headline = models.CharField(max_length=255)\n   body_text = models.TextField()\n   authors = models.ManyToManyField(Author)\n   def __str__(self):            \n      return self.headline\n\n```\n上面的数据关系很明晰,Entry中有Blog和Author的外键,如果要在Entry中读取blog和author的数据很容易:\n``` python\nentry = Entry.objects.all()\nfor e in entry:\n    blog = e.blog\n    author = e.authors\n```\n要在Blog和Author中读取Entry也可以：\n``` python\nblog = Blog.objects.all()\nentry = blog.entry_set.all()\n \nauthor = Author.objects.all()\nentry = author.entry_set.all()\n```\n\n下面通过entry使blog和author互相读取，比如要知道一个blog的Author只需如下:\n``` python\nblogs = Blog.objects.all()\nfor blog in blogs:\n    if blog.name== “我们想要查询的博客的name”\n        author = blog. entry_set.authors\n```\n要查询一个author的所有blog如下：\n``` python\nauthors = Author.objects.all()\nblogs = []\n \nfor author in authors:\n    if author.name== “我们想要查询的Author的name”\n        for entry in author.entry_set.all():\n            blogs.append(entry. blog)\n```\n-----","slug":"django-外键model的互相读取","published":1,"updated":"2019-02-28T15:33:21.543Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkdj000aokq4lifi5684","content":"<p>先设定一个关系模型如下:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Blog</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">   name = models.CharField(max_length=<span class=\"number\">100</span>)</span><br><span class=\"line\">   tagline = models.TextField()</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span>            </span><br><span class=\"line\">       <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Author</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">   name = models.CharField(max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">   email = models.EmailField()</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span>           </span><br><span class=\"line\">       <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Entry</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">   blog = models.ForeignKey(Blog)</span><br><span class=\"line\">   headline = models.CharField(max_length=<span class=\"number\">255</span>)</span><br><span class=\"line\">   body_text = models.TextField()</span><br><span class=\"line\">   authors = models.ManyToManyField(Author)</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span>            </span><br><span class=\"line\">      <span class=\"keyword\">return</span> self.headline</span><br></pre></td></tr></table></figure></p>\n<p>上面的数据关系很明晰,Entry中有Blog和Author的外键,如果要在Entry中读取blog和author的数据很容易:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry = Entry.objects.all()</span><br><span class=\"line\"><span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> entry:</span><br><span class=\"line\">    blog = e.blog</span><br><span class=\"line\">    author = e.authors</span><br></pre></td></tr></table></figure></p>\n<p>要在Blog和Author中读取Entry也可以：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blog = Blog.objects.all()</span><br><span class=\"line\">entry = blog.entry_set.all()</span><br><span class=\"line\"> </span><br><span class=\"line\">author = Author.objects.all()</span><br><span class=\"line\">entry = author.entry_set.all()</span><br></pre></td></tr></table></figure></p>\n<p>下面通过entry使blog和author互相读取，比如要知道一个blog的Author只需如下:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blogs = Blog.objects.all()</span><br><span class=\"line\"><span class=\"keyword\">for</span> blog <span class=\"keyword\">in</span> blogs:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> blog.name== “我们想要查询的博客的name”</span><br><span class=\"line\">        author = blog. entry_set.authors</span><br></pre></td></tr></table></figure></p>\n<p>要查询一个author的所有blog如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">authors = Author.objects.all()</span><br><span class=\"line\">blogs = []</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">for</span> author <span class=\"keyword\">in</span> authors:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> author.name== “我们想要查询的Author的name”</span><br><span class=\"line\">        <span class=\"keyword\">for</span> entry <span class=\"keyword\">in</span> author.entry_set.all():</span><br><span class=\"line\">            blogs.append(entry. blog)</span><br></pre></td></tr></table></figure></p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>先设定一个关系模型如下:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Blog</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">   name = models.CharField(max_length=<span class=\"number\">100</span>)</span><br><span class=\"line\">   tagline = models.TextField()</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span>            </span><br><span class=\"line\">       <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Author</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">   name = models.CharField(max_length=<span class=\"number\">50</span>)</span><br><span class=\"line\">   email = models.EmailField()</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span>           </span><br><span class=\"line\">       <span class=\"keyword\">return</span> self.name</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Entry</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">   blog = models.ForeignKey(Blog)</span><br><span class=\"line\">   headline = models.CharField(max_length=<span class=\"number\">255</span>)</span><br><span class=\"line\">   body_text = models.TextField()</span><br><span class=\"line\">   authors = models.ManyToManyField(Author)</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span>            </span><br><span class=\"line\">      <span class=\"keyword\">return</span> self.headline</span><br></pre></td></tr></table></figure></p>\n<p>上面的数据关系很明晰,Entry中有Blog和Author的外键,如果要在Entry中读取blog和author的数据很容易:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry = Entry.objects.all()</span><br><span class=\"line\"><span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> entry:</span><br><span class=\"line\">    blog = e.blog</span><br><span class=\"line\">    author = e.authors</span><br></pre></td></tr></table></figure></p>\n<p>要在Blog和Author中读取Entry也可以：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blog = Blog.objects.all()</span><br><span class=\"line\">entry = blog.entry_set.all()</span><br><span class=\"line\"> </span><br><span class=\"line\">author = Author.objects.all()</span><br><span class=\"line\">entry = author.entry_set.all()</span><br></pre></td></tr></table></figure></p>\n<p>下面通过entry使blog和author互相读取，比如要知道一个blog的Author只需如下:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blogs = Blog.objects.all()</span><br><span class=\"line\"><span class=\"keyword\">for</span> blog <span class=\"keyword\">in</span> blogs:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> blog.name== “我们想要查询的博客的name”</span><br><span class=\"line\">        author = blog. entry_set.authors</span><br></pre></td></tr></table></figure></p>\n<p>要查询一个author的所有blog如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">authors = Author.objects.all()</span><br><span class=\"line\">blogs = []</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">for</span> author <span class=\"keyword\">in</span> authors:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> author.name== “我们想要查询的Author的name”</span><br><span class=\"line\">        <span class=\"keyword\">for</span> entry <span class=\"keyword\">in</span> author.entry_set.all():</span><br><span class=\"line\">            blogs.append(entry. blog)</span><br></pre></td></tr></table></figure></p>\n<hr>\n"},{"title":"linux和windows的线程机制的区别","date":"2016-03-31T14:02:39.000Z","copyright":true,"_content":"在Linux内核中，描述一个进程主要是task_struct，一个称为进程描述符的数据结构。这个数据结构很庞大，包含了内核管理一个进程所需的所有信息，描述了一个正在执行的进程，包括进程ID，它打开的文件，进程的地址空间，挂起的信号，进程的状态等等其他信息。\n\nLinux的线程机制和Windows等其他操作系统的很不一样，Linux中没有为线程设置专门的数据结构，也没有专门的线程调度算法，在Linux内核看来，线程就是一个进程，只是一个和其他进程共享资源的特殊进程而已。\n\n在Linux中，创建线程时，和创建普通的进程类似，每个线程都拥有自个的进程描述符task_struct，只是在调用clone()的时候需要传递一些参数标志来指明共享的资源。如图1所示。  \n\n![linux下的进程和线程](1.jpg)\n\n而在windows等其他操作系统中，进程拥有一个进程描述符，描述一些地址空间和打开的文件等共享资源，进程中包含指向不同线程的指针，这些线程没有进程描述符，只描述一些少量的独有的资源，因此很轻量。同时这些线程共享进程的资源。如图2所示。  \n\n![其他操作系统的进程和线程](2.jpg)\n\n----","source":"_posts/linux和windows的线程机制的区别.md","raw":"---\ntitle: linux和windows的线程机制的区别\ndate: 2016-03-31 22:02:39\ntags: [linux,windows,线程机制]\ncategories:\n- 原创\n- 系统\ncopyright: true\n---\n在Linux内核中，描述一个进程主要是task_struct，一个称为进程描述符的数据结构。这个数据结构很庞大，包含了内核管理一个进程所需的所有信息，描述了一个正在执行的进程，包括进程ID，它打开的文件，进程的地址空间，挂起的信号，进程的状态等等其他信息。\n\nLinux的线程机制和Windows等其他操作系统的很不一样，Linux中没有为线程设置专门的数据结构，也没有专门的线程调度算法，在Linux内核看来，线程就是一个进程，只是一个和其他进程共享资源的特殊进程而已。\n\n在Linux中，创建线程时，和创建普通的进程类似，每个线程都拥有自个的进程描述符task_struct，只是在调用clone()的时候需要传递一些参数标志来指明共享的资源。如图1所示。  \n\n![linux下的进程和线程](1.jpg)\n\n而在windows等其他操作系统中，进程拥有一个进程描述符，描述一些地址空间和打开的文件等共享资源，进程中包含指向不同线程的指针，这些线程没有进程描述符，只描述一些少量的独有的资源，因此很轻量。同时这些线程共享进程的资源。如图2所示。  \n\n![其他操作系统的进程和线程](2.jpg)\n\n----","slug":"linux和windows的线程机制的区别","published":1,"updated":"2019-02-28T15:31:05.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkdm000dokq4ria5dmkt","content":"<p>在Linux内核中，描述一个进程主要是task_struct，一个称为进程描述符的数据结构。这个数据结构很庞大，包含了内核管理一个进程所需的所有信息，描述了一个正在执行的进程，包括进程ID，它打开的文件，进程的地址空间，挂起的信号，进程的状态等等其他信息。</p>\n<p>Linux的线程机制和Windows等其他操作系统的很不一样，Linux中没有为线程设置专门的数据结构，也没有专门的线程调度算法，在Linux内核看来，线程就是一个进程，只是一个和其他进程共享资源的特殊进程而已。</p>\n<p>在Linux中，创建线程时，和创建普通的进程类似，每个线程都拥有自个的进程描述符task_struct，只是在调用clone()的时候需要传递一些参数标志来指明共享的资源。如图1所示。  </p>\n<p><img src=\"1.jpg\" alt=\"linux下的进程和线程\"></p>\n<p>而在windows等其他操作系统中，进程拥有一个进程描述符，描述一些地址空间和打开的文件等共享资源，进程中包含指向不同线程的指针，这些线程没有进程描述符，只描述一些少量的独有的资源，因此很轻量。同时这些线程共享进程的资源。如图2所示。  </p>\n<p><img src=\"2.jpg\" alt=\"其他操作系统的进程和线程\"></p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>在Linux内核中，描述一个进程主要是task_struct，一个称为进程描述符的数据结构。这个数据结构很庞大，包含了内核管理一个进程所需的所有信息，描述了一个正在执行的进程，包括进程ID，它打开的文件，进程的地址空间，挂起的信号，进程的状态等等其他信息。</p>\n<p>Linux的线程机制和Windows等其他操作系统的很不一样，Linux中没有为线程设置专门的数据结构，也没有专门的线程调度算法，在Linux内核看来，线程就是一个进程，只是一个和其他进程共享资源的特殊进程而已。</p>\n<p>在Linux中，创建线程时，和创建普通的进程类似，每个线程都拥有自个的进程描述符task_struct，只是在调用clone()的时候需要传递一些参数标志来指明共享的资源。如图1所示。  </p>\n<p><img src=\"1.jpg\" alt=\"linux下的进程和线程\"></p>\n<p>而在windows等其他操作系统中，进程拥有一个进程描述符，描述一些地址空间和打开的文件等共享资源，进程中包含指向不同线程的指针，这些线程没有进程描述符，只描述一些少量的独有的资源，因此很轻量。同时这些线程共享进程的资源。如图2所示。  </p>\n<p><img src=\"2.jpg\" alt=\"其他操作系统的进程和线程\"></p>\n<hr>\n"},{"title":"如何编写Floodlight REST 应用","date":"2015-12-28T08:41:37.000Z","copyright":true,"_content":"可以用任何你喜欢的编程语言编写REST应用\n#### 参照步骤\n1、确定需求，也就是你编写的REST应用需要哪些网络服务和信息。\n2、检查REST API，看看是否有提供你所需的服务。  \n* 如果有，了解其RESTAPI的语法，输入的参数以及可得的选项，这样就可以直接拿来用。  \n* 如果没有，也可能是你所需的网络服务和资源信息没有提供REST API，但却可以在floodlight模块中可获得这些信息，只是没通过API暴露出来。这种情况，你可以自己实现REST API来提供你所需的服务。  \n* 如果既没有REST API，又在floodlight中找不到，那你可以自己开发floodlight Java模块，并且实现自定义的模块的REST API来提供所需的服务。\n\n3、用所有你需要的REST API方法，设计以及组成你的应用。\n4、测试你的应用并且反馈给floodlight。\n\n\n下面通过在floodlight/apps目录下的 python Circuit Pusher应用说明。  \nCurcuit Pusher例子给我们展示了如何创建一个在OpenFlow集群中的两个有IP的主机A和B之间的静态单路径线路。\n#### 设计方法 \n1、确定所需的网络服务和信息：  \n* 主机A和B的接触点，即用（交换机ID，端口）表示的数据实体，代表A和B的物理位置。\n* A和B之间接触点的路由，即从A经过哪个交换机和哪个端口到达B的路径\n* 在A和B路由上所有交换机安装流量线路的服务\n\n2、从RESTAPI中查到的可提供的信息：\n+ 从/wm/device/的GET参数获取设备的接触点信息，比如IP地址\n+ 从/wm/topology/route/<switchIdA>/<portA>/<switchIdB>/<portB>/json可以获取A和B接触点之间的路由信息\n+ 用/wm/staticflowentrypusher/json的POST方法给指定的交换机安装流表项\n\n3、应用设计：\n+ 语言使用Python\n+ 使用os.popen方法发送curl 命令来调用REST API的方法(应该还可以使用os.system)\n+ 熟悉 /wm/device语法特点，然后在命令返回的结果中解析出A和B接触点的交换机\n+ 熟悉 /wm/topology/route的语法，获取交换机和端口用来下发流表项\n+ 对于每个交换机和端口对，可以通过/wm/staticflowentrypusher/json下发流表\n\n----","source":"_posts/如何编写Floodlight-REST-应用.md","raw":"---\ntitle: 如何编写Floodlight REST 应用\ndate: 2015-12-28 16:41:37\ntags: [SDN,Floodlight]\ncategories: \n- 原创\n- SDN\ncopyright: true\n---\n可以用任何你喜欢的编程语言编写REST应用\n#### 参照步骤\n1、确定需求，也就是你编写的REST应用需要哪些网络服务和信息。\n2、检查REST API，看看是否有提供你所需的服务。  \n* 如果有，了解其RESTAPI的语法，输入的参数以及可得的选项，这样就可以直接拿来用。  \n* 如果没有，也可能是你所需的网络服务和资源信息没有提供REST API，但却可以在floodlight模块中可获得这些信息，只是没通过API暴露出来。这种情况，你可以自己实现REST API来提供你所需的服务。  \n* 如果既没有REST API，又在floodlight中找不到，那你可以自己开发floodlight Java模块，并且实现自定义的模块的REST API来提供所需的服务。\n\n3、用所有你需要的REST API方法，设计以及组成你的应用。\n4、测试你的应用并且反馈给floodlight。\n\n\n下面通过在floodlight/apps目录下的 python Circuit Pusher应用说明。  \nCurcuit Pusher例子给我们展示了如何创建一个在OpenFlow集群中的两个有IP的主机A和B之间的静态单路径线路。\n#### 设计方法 \n1、确定所需的网络服务和信息：  \n* 主机A和B的接触点，即用（交换机ID，端口）表示的数据实体，代表A和B的物理位置。\n* A和B之间接触点的路由，即从A经过哪个交换机和哪个端口到达B的路径\n* 在A和B路由上所有交换机安装流量线路的服务\n\n2、从RESTAPI中查到的可提供的信息：\n+ 从/wm/device/的GET参数获取设备的接触点信息，比如IP地址\n+ 从/wm/topology/route/<switchIdA>/<portA>/<switchIdB>/<portB>/json可以获取A和B接触点之间的路由信息\n+ 用/wm/staticflowentrypusher/json的POST方法给指定的交换机安装流表项\n\n3、应用设计：\n+ 语言使用Python\n+ 使用os.popen方法发送curl 命令来调用REST API的方法(应该还可以使用os.system)\n+ 熟悉 /wm/device语法特点，然后在命令返回的结果中解析出A和B接触点的交换机\n+ 熟悉 /wm/topology/route的语法，获取交换机和端口用来下发流表项\n+ 对于每个交换机和端口对，可以通过/wm/staticflowentrypusher/json下发流表\n\n----","slug":"如何编写Floodlight-REST-应用","published":1,"updated":"2019-02-27T06:58:24.157Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkdo000eokq4wl6emz4c","content":"<p>可以用任何你喜欢的编程语言编写REST应用</p>\n<h4 id=\"参照步骤\"><a href=\"#参照步骤\" class=\"headerlink\" title=\"参照步骤\"></a>参照步骤</h4><p>1、确定需求，也就是你编写的REST应用需要哪些网络服务和信息。<br>2、检查REST API，看看是否有提供你所需的服务。  </p>\n<ul>\n<li>如果有，了解其RESTAPI的语法，输入的参数以及可得的选项，这样就可以直接拿来用。  </li>\n<li>如果没有，也可能是你所需的网络服务和资源信息没有提供REST API，但却可以在floodlight模块中可获得这些信息，只是没通过API暴露出来。这种情况，你可以自己实现REST API来提供你所需的服务。  </li>\n<li>如果既没有REST API，又在floodlight中找不到，那你可以自己开发floodlight Java模块，并且实现自定义的模块的REST API来提供所需的服务。</li>\n</ul>\n<p>3、用所有你需要的REST API方法，设计以及组成你的应用。<br>4、测试你的应用并且反馈给floodlight。</p>\n<p>下面通过在floodlight/apps目录下的 python Circuit Pusher应用说明。<br>Curcuit Pusher例子给我们展示了如何创建一个在OpenFlow集群中的两个有IP的主机A和B之间的静态单路径线路。</p>\n<h4 id=\"设计方法\"><a href=\"#设计方法\" class=\"headerlink\" title=\"设计方法\"></a>设计方法</h4><p>1、确定所需的网络服务和信息：  </p>\n<ul>\n<li>主机A和B的接触点，即用（交换机ID，端口）表示的数据实体，代表A和B的物理位置。</li>\n<li>A和B之间接触点的路由，即从A经过哪个交换机和哪个端口到达B的路径</li>\n<li>在A和B路由上所有交换机安装流量线路的服务</li>\n</ul>\n<p>2、从RESTAPI中查到的可提供的信息：</p>\n<ul>\n<li>从/wm/device/的GET参数获取设备的接触点信息，比如IP地址</li>\n<li>从/wm/topology/route/<switchida>/<porta>/<switchidb>/<portb>/json可以获取A和B接触点之间的路由信息</portb></switchidb></porta></switchida></li>\n<li>用/wm/staticflowentrypusher/json的POST方法给指定的交换机安装流表项</li>\n</ul>\n<p>3、应用设计：</p>\n<ul>\n<li>语言使用Python</li>\n<li>使用os.popen方法发送curl 命令来调用REST API的方法(应该还可以使用os.system)</li>\n<li>熟悉 /wm/device语法特点，然后在命令返回的结果中解析出A和B接触点的交换机</li>\n<li>熟悉 /wm/topology/route的语法，获取交换机和端口用来下发流表项</li>\n<li>对于每个交换机和端口对，可以通过/wm/staticflowentrypusher/json下发流表</li>\n</ul>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>可以用任何你喜欢的编程语言编写REST应用</p>\n<h4 id=\"参照步骤\"><a href=\"#参照步骤\" class=\"headerlink\" title=\"参照步骤\"></a>参照步骤</h4><p>1、确定需求，也就是你编写的REST应用需要哪些网络服务和信息。<br>2、检查REST API，看看是否有提供你所需的服务。  </p>\n<ul>\n<li>如果有，了解其RESTAPI的语法，输入的参数以及可得的选项，这样就可以直接拿来用。  </li>\n<li>如果没有，也可能是你所需的网络服务和资源信息没有提供REST API，但却可以在floodlight模块中可获得这些信息，只是没通过API暴露出来。这种情况，你可以自己实现REST API来提供你所需的服务。  </li>\n<li>如果既没有REST API，又在floodlight中找不到，那你可以自己开发floodlight Java模块，并且实现自定义的模块的REST API来提供所需的服务。</li>\n</ul>\n<p>3、用所有你需要的REST API方法，设计以及组成你的应用。<br>4、测试你的应用并且反馈给floodlight。</p>\n<p>下面通过在floodlight/apps目录下的 python Circuit Pusher应用说明。<br>Curcuit Pusher例子给我们展示了如何创建一个在OpenFlow集群中的两个有IP的主机A和B之间的静态单路径线路。</p>\n<h4 id=\"设计方法\"><a href=\"#设计方法\" class=\"headerlink\" title=\"设计方法\"></a>设计方法</h4><p>1、确定所需的网络服务和信息：  </p>\n<ul>\n<li>主机A和B的接触点，即用（交换机ID，端口）表示的数据实体，代表A和B的物理位置。</li>\n<li>A和B之间接触点的路由，即从A经过哪个交换机和哪个端口到达B的路径</li>\n<li>在A和B路由上所有交换机安装流量线路的服务</li>\n</ul>\n<p>2、从RESTAPI中查到的可提供的信息：</p>\n<ul>\n<li>从/wm/device/的GET参数获取设备的接触点信息，比如IP地址</li>\n<li>从/wm/topology/route/<switchida>/<porta>/<switchidb>/<portb>/json可以获取A和B接触点之间的路由信息</portb></switchidb></porta></switchida></li>\n<li>用/wm/staticflowentrypusher/json的POST方法给指定的交换机安装流表项</li>\n</ul>\n<p>3、应用设计：</p>\n<ul>\n<li>语言使用Python</li>\n<li>使用os.popen方法发送curl 命令来调用REST API的方法(应该还可以使用os.system)</li>\n<li>熟悉 /wm/device语法特点，然后在命令返回的结果中解析出A和B接触点的交换机</li>\n<li>熟悉 /wm/topology/route的语法，获取交换机和端口用来下发流表项</li>\n<li>对于每个交换机和端口对，可以通过/wm/staticflowentrypusher/json下发流表</li>\n</ul>\n<hr>\n"},{"title":"简单配置bind9 的master 和slave","date":"2016-01-02T12:55:21.000Z","copyright":true,"_content":"**系统**：两台FreeBSD 10.1\n**部署**：一台做master，一台做slave\n\n**具体步骤如下：**\n1. 首先是安装bind9，我是用的ansible远程安装的，暂时还没有把主从两个安装和配置分开，所以一开始在两台FreeBSD上安装的是一样的bind9，包括named.conf和zone文件都是一样，后面再分开配置的。\n\n2. 安装的过程就不赘述了，网上有很多资料，安装完后，就该分别配置两台主机使它们分别作为主从域名服务器了，其实基本配置差不多，比如options里的参数就差不多，只需要改变zone的配置。  \n\n**在master中：**\n```\nzone\"XXX.com\" IN {\n            type master;\n            file \"XXX.com.zone\";\n            allow-update { none; };\n            allow-transfer { <slave的IP地址>; };  //允许被哪台slave复制数据过去\n};\n```\n  **在slave中：**\n  ```\n  zone \"XXX.com\" IN {\n             type slave;\n             file \"slaves/XXX.com.zone\"; //自动创建并从master复制内容\n             masters { <master的IP地址>; };  //指明那台是master，可以有多台，指定多台的时候，multi-master设置为yes\n  };\n  ```\n \n3. Zone对应的资源文件只需要在master里编写和修改就可以了，配置好了后，分别重启服务：service named restart ，就可以看到在slave中原本没有资源文件，现在自动从master中同步过来了。当master中的zone设置了allow-transfer，且资源文件里的Serial有改变时，就会通知slave同步masters里对应地址的主域名服务器的数据。\n\n----","source":"_posts/简单配置bind9-的master-和slave.md","raw":"---\ntitle: 简单配置bind9 的master 和slave\ndate: 2016-01-02 20:55:21\ntags: [bind9]\ncategories:\n- 原创\n- 网络\ncopyright: true\n---\n**系统**：两台FreeBSD 10.1\n**部署**：一台做master，一台做slave\n\n**具体步骤如下：**\n1. 首先是安装bind9，我是用的ansible远程安装的，暂时还没有把主从两个安装和配置分开，所以一开始在两台FreeBSD上安装的是一样的bind9，包括named.conf和zone文件都是一样，后面再分开配置的。\n\n2. 安装的过程就不赘述了，网上有很多资料，安装完后，就该分别配置两台主机使它们分别作为主从域名服务器了，其实基本配置差不多，比如options里的参数就差不多，只需要改变zone的配置。  \n\n**在master中：**\n```\nzone\"XXX.com\" IN {\n            type master;\n            file \"XXX.com.zone\";\n            allow-update { none; };\n            allow-transfer { <slave的IP地址>; };  //允许被哪台slave复制数据过去\n};\n```\n  **在slave中：**\n  ```\n  zone \"XXX.com\" IN {\n             type slave;\n             file \"slaves/XXX.com.zone\"; //自动创建并从master复制内容\n             masters { <master的IP地址>; };  //指明那台是master，可以有多台，指定多台的时候，multi-master设置为yes\n  };\n  ```\n \n3. Zone对应的资源文件只需要在master里编写和修改就可以了，配置好了后，分别重启服务：service named restart ，就可以看到在slave中原本没有资源文件，现在自动从master中同步过来了。当master中的zone设置了allow-transfer，且资源文件里的Serial有改变时，就会通知slave同步masters里对应地址的主域名服务器的数据。\n\n----","slug":"简单配置bind9-的master-和slave","published":1,"updated":"2019-02-28T15:32:34.955Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjsqvjkdq000hokq4upprn6ol","content":"<p><strong>系统</strong>：两台FreeBSD 10.1<br><strong>部署</strong>：一台做master，一台做slave</p>\n<p><strong>具体步骤如下：</strong></p>\n<ol>\n<li><p>首先是安装bind9，我是用的ansible远程安装的，暂时还没有把主从两个安装和配置分开，所以一开始在两台FreeBSD上安装的是一样的bind9，包括named.conf和zone文件都是一样，后面再分开配置的。</p>\n</li>\n<li><p>安装的过程就不赘述了，网上有很多资料，安装完后，就该分别配置两台主机使它们分别作为主从域名服务器了，其实基本配置差不多，比如options里的参数就差不多，只需要改变zone的配置。  </p>\n</li>\n</ol>\n<p><strong>在master中：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zone&quot;XXX.com&quot; IN &#123;</span><br><span class=\"line\">            type master;</span><br><span class=\"line\">            file &quot;XXX.com.zone&quot;;</span><br><span class=\"line\">            allow-update &#123; none; &#125;;</span><br><span class=\"line\">            allow-transfer &#123; &lt;slave的IP地址&gt;; &#125;;  //允许被哪台slave复制数据过去</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>  <strong>在slave中：</strong><br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zone &quot;XXX.com&quot; IN &#123;</span><br><span class=\"line\">             type slave;</span><br><span class=\"line\">             file &quot;slaves/XXX.com.zone&quot;; //自动创建并从master复制内容</span><br><span class=\"line\">             masters &#123; &lt;master的IP地址&gt;; &#125;;  //指明那台是master，可以有多台，指定多台的时候，multi-master设置为yes</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<ol start=\"3\">\n<li>Zone对应的资源文件只需要在master里编写和修改就可以了，配置好了后，分别重启服务：service named restart ，就可以看到在slave中原本没有资源文件，现在自动从master中同步过来了。当master中的zone设置了allow-transfer，且资源文件里的Serial有改变时，就会通知slave同步masters里对应地址的主域名服务器的数据。</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>系统</strong>：两台FreeBSD 10.1<br><strong>部署</strong>：一台做master，一台做slave</p>\n<p><strong>具体步骤如下：</strong></p>\n<ol>\n<li><p>首先是安装bind9，我是用的ansible远程安装的，暂时还没有把主从两个安装和配置分开，所以一开始在两台FreeBSD上安装的是一样的bind9，包括named.conf和zone文件都是一样，后面再分开配置的。</p>\n</li>\n<li><p>安装的过程就不赘述了，网上有很多资料，安装完后，就该分别配置两台主机使它们分别作为主从域名服务器了，其实基本配置差不多，比如options里的参数就差不多，只需要改变zone的配置。  </p>\n</li>\n</ol>\n<p><strong>在master中：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zone&quot;XXX.com&quot; IN &#123;</span><br><span class=\"line\">            type master;</span><br><span class=\"line\">            file &quot;XXX.com.zone&quot;;</span><br><span class=\"line\">            allow-update &#123; none; &#125;;</span><br><span class=\"line\">            allow-transfer &#123; &lt;slave的IP地址&gt;; &#125;;  //允许被哪台slave复制数据过去</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>  <strong>在slave中：</strong><br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zone &quot;XXX.com&quot; IN &#123;</span><br><span class=\"line\">             type slave;</span><br><span class=\"line\">             file &quot;slaves/XXX.com.zone&quot;; //自动创建并从master复制内容</span><br><span class=\"line\">             masters &#123; &lt;master的IP地址&gt;; &#125;;  //指明那台是master，可以有多台，指定多台的时候，multi-master设置为yes</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<ol start=\"3\">\n<li>Zone对应的资源文件只需要在master里编写和修改就可以了，配置好了后，分别重启服务：service named restart ，就可以看到在slave中原本没有资源文件，现在自动从master中同步过来了。当master中的zone设置了allow-transfer，且资源文件里的Serial有改变时，就会通知slave同步masters里对应地址的主域名服务器的数据。</li>\n</ol>\n<hr>\n"}],"PostAsset":[{"_id":"source/_posts/linux和windows的线程机制的区别/1.jpg","slug":"1.jpg","post":"cjsqvjkdm000dokq4ria5dmkt","modified":0,"renderable":0},{"_id":"source/_posts/linux和windows的线程机制的区别/2.jpg","slug":"2.jpg","post":"cjsqvjkdm000dokq4ria5dmkt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/1.png","slug":"1.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/2.png","slug":"2.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/3.png","slug":"3.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/4.png","slug":"4.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/5.png","slug":"5.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/6.png","slug":"6.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/7.png","slug":"7.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/8.png","slug":"8.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Vmware-Ubuntu14-04-mininet中的host如何访问外网/9.png","slug":"9.png","post":"cjsqvjkdi0009okq4r24615rt","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/1.png","slug":"1.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/10.png","slug":"10.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/11.png","slug":"11.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/2.png","slug":"2.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/3.png","slug":"3.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/4.png","slug":"4.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/5.png","slug":"5.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/6.png","slug":"6.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/7.png","slug":"7.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/8.png","slug":"8.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0},{"_id":"source/_posts/Floodligh-Web-UI显示的host比实际多且不会被清除的原因及解决方法/9.png","slug":"9.png","post":"cjsqvjkd70001okq4hxr1iynh","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjsqvjkdi0009okq4r24615rt","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdv000tokq4et2y379w"},{"post_id":"cjsqvjkdi0009okq4r24615rt","category_id":"cjsqvjkdr000jokq4tdnkyfxz","_id":"cjsqvjkdw000vokq4g6h0lmvb"},{"post_id":"cjsqvjkd70001okq4hxr1iynh","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdw000wokq42umwrkcy"},{"post_id":"cjsqvjkd70001okq4hxr1iynh","category_id":"cjsqvjkdr000jokq4tdnkyfxz","_id":"cjsqvjkdx0010okq4erheq483"},{"post_id":"cjsqvjkdj000aokq4lifi5684","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdx0012okq4dx1vehb3"},{"post_id":"cjsqvjkdj000aokq4lifi5684","category_id":"cjsqvjkdv000sokq49q81d4ir","_id":"cjsqvjkdx0015okq4bghvogxx"},{"post_id":"cjsqvjkdm000dokq4ria5dmkt","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdy0017okq4fplvx8qk"},{"post_id":"cjsqvjkdm000dokq4ria5dmkt","category_id":"cjsqvjkdw000yokq4e5ys390a","_id":"cjsqvjkdy001aokq4c59kbm59"},{"post_id":"cjsqvjkdc0003okq4ga2zp9z7","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdz001dokq4uw60t0b3"},{"post_id":"cjsqvjkdc0003okq4ga2zp9z7","category_id":"cjsqvjkdr000jokq4tdnkyfxz","_id":"cjsqvjkdz001gokq4eu6mnz3u"},{"post_id":"cjsqvjkdo000eokq4wl6emz4c","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjkdz001hokq4fef9xlx1"},{"post_id":"cjsqvjkdo000eokq4wl6emz4c","category_id":"cjsqvjkdr000jokq4tdnkyfxz","_id":"cjsqvjke0001kokq48in1g9m1"},{"post_id":"cjsqvjkdq000hokq4upprn6ol","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjke0001mokq4t2r8c7qu"},{"post_id":"cjsqvjkdq000hokq4upprn6ol","category_id":"cjsqvjkdy001cokq4wiiz58ub","_id":"cjsqvjke1001pokq4flp2cbp5"},{"post_id":"cjsqvjkdg0007okq4yo8ctxu9","category_id":"cjsqvjkde0005okq4ufrvcklf","_id":"cjsqvjke1001qokq4fh5pjg4a"},{"post_id":"cjsqvjkdg0007okq4yo8ctxu9","category_id":"cjsqvjkdr000jokq4tdnkyfxz","_id":"cjsqvjke1001sokq4d4v5d1sz"}],"PostTag":[{"post_id":"cjsqvjkd70001okq4hxr1iynh","tag_id":"cjsqvjkdg0006okq40qedv4v0","_id":"cjsqvjkdr000iokq4cjnoutzd"},{"post_id":"cjsqvjkd70001okq4hxr1iynh","tag_id":"cjsqvjkdk000cokq4c72akznm","_id":"cjsqvjkdt000kokq44ohi88po"},{"post_id":"cjsqvjkdo000eokq4wl6emz4c","tag_id":"cjsqvjkdg0006okq40qedv4v0","_id":"cjsqvjkdt000mokq491in0c4p"},{"post_id":"cjsqvjkdo000eokq4wl6emz4c","tag_id":"cjsqvjkdk000cokq4c72akznm","_id":"cjsqvjkdu000nokq4fgjs1tyv"},{"post_id":"cjsqvjkdc0003okq4ga2zp9z7","tag_id":"cjsqvjkdg0006okq40qedv4v0","_id":"cjsqvjkdv000qokq47gs98a47"},{"post_id":"cjsqvjkdc0003okq4ga2zp9z7","tag_id":"cjsqvjkdk000cokq4c72akznm","_id":"cjsqvjkdv000rokq4s552imuo"},{"post_id":"cjsqvjkdg0007okq4yo8ctxu9","tag_id":"cjsqvjkdg0006okq40qedv4v0","_id":"cjsqvjkdx000zokq4l6yni0ay"},{"post_id":"cjsqvjkdg0007okq4yo8ctxu9","tag_id":"cjsqvjkdk000cokq4c72akznm","_id":"cjsqvjkdx0011okq4x5lngwin"},{"post_id":"cjsqvjkdi0009okq4r24615rt","tag_id":"cjsqvjkdg0006okq40qedv4v0","_id":"cjsqvjkdy0019okq4sn784ae8"},{"post_id":"cjsqvjkdi0009okq4r24615rt","tag_id":"cjsqvjkdw000xokq4v0k1ot6c","_id":"cjsqvjkdy001bokq4rh171u35"},{"post_id":"cjsqvjkdi0009okq4r24615rt","tag_id":"cjsqvjkdx0013okq4hgzu1dg7","_id":"cjsqvjkdz001fokq4n6p5iogp"},{"post_id":"cjsqvjkdj000aokq4lifi5684","tag_id":"cjsqvjkdy0018okq4zzzol3y6","_id":"cjsqvjke0001lokq4adiuwayx"},{"post_id":"cjsqvjkdj000aokq4lifi5684","tag_id":"cjsqvjkdz001eokq4glro69fc","_id":"cjsqvjke0001nokq44u8b87ex"},{"post_id":"cjsqvjkdm000dokq4ria5dmkt","tag_id":"cjsqvjkdz001jokq40j08odsx","_id":"cjsqvjke1001uokq4pjdkvl99"},{"post_id":"cjsqvjkdm000dokq4ria5dmkt","tag_id":"cjsqvjke0001ookq4i6kem151","_id":"cjsqvjke2001vokq4c8399045"},{"post_id":"cjsqvjkdm000dokq4ria5dmkt","tag_id":"cjsqvjke1001rokq4qvvft4fu","_id":"cjsqvjke2001wokq4z2dhmbfq"},{"post_id":"cjsqvjkdq000hokq4upprn6ol","tag_id":"cjsqvjke1001tokq47sao3hth","_id":"cjsqvjke2001xokq40758oz38"}],"Tag":[{"name":"SDN","_id":"cjsqvjkdg0006okq40qedv4v0"},{"name":"Floodlight","_id":"cjsqvjkdk000cokq4c72akznm"},{"name":"Mininet","_id":"cjsqvjkdw000xokq4v0k1ot6c"},{"name":"Linux","_id":"cjsqvjkdx0013okq4hgzu1dg7"},{"name":"Python","_id":"cjsqvjkdy0018okq4zzzol3y6"},{"name":"Django","_id":"cjsqvjkdz001eokq4glro69fc"},{"name":"linux","_id":"cjsqvjkdz001jokq40j08odsx"},{"name":"windows","_id":"cjsqvjke0001ookq4i6kem151"},{"name":"线程机制","_id":"cjsqvjke1001rokq4qvvft4fu"},{"name":"bind9","_id":"cjsqvjke1001tokq47sao3hth"}]}}